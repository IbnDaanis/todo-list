{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/version.js","../node_modules/uuid/dist/esm-browser/index.js","helpers/stringToHTML.js","components/taskForm.js","components/taskItem.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/add/index.js","../node_modules/date-fns/esm/isWeekend/index.js","../node_modules/date-fns/esm/isSunday/index.js","../node_modules/date-fns/esm/isSaturday/index.js","../node_modules/date-fns/esm/addBusinessDays/index.js","../node_modules/date-fns/esm/addMilliseconds/index.js","../node_modules/date-fns/esm/addHours/index.js","../node_modules/date-fns/esm/startOfWeek/index.js","../node_modules/date-fns/esm/startOfISOWeek/index.js","../node_modules/date-fns/esm/getISOWeekYear/index.js","../node_modules/date-fns/esm/startOfISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/esm/startOfDay/index.js","../node_modules/date-fns/esm/differenceInCalendarDays/index.js","../node_modules/date-fns/esm/setISOWeekYear/index.js","../node_modules/date-fns/esm/addISOWeekYears/index.js","../node_modules/date-fns/esm/addMinutes/index.js","../node_modules/date-fns/esm/addQuarters/index.js","../node_modules/date-fns/esm/addSeconds/index.js","../node_modules/date-fns/esm/addWeeks/index.js","../node_modules/date-fns/esm/addYears/index.js","../node_modules/date-fns/esm/areIntervalsOverlapping/index.js","../node_modules/date-fns/esm/closestIndexTo/index.js","../node_modules/date-fns/esm/closestTo/index.js","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/compareDesc/index.js","../node_modules/date-fns/esm/isValid/index.js","../node_modules/date-fns/esm/isSameDay/index.js","../node_modules/date-fns/esm/differenceInBusinessDays/index.js","../node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js","../node_modules/date-fns/esm/differenceInCalendarISOWeeks/index.js","../node_modules/date-fns/esm/differenceInCalendarMonths/index.js","../node_modules/date-fns/esm/getQuarter/index.js","../node_modules/date-fns/esm/differenceInCalendarQuarters/index.js","../node_modules/date-fns/esm/differenceInCalendarWeeks/index.js","../node_modules/date-fns/esm/differenceInCalendarYears/index.js","../node_modules/date-fns/esm/differenceInDays/index.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/differenceInHours/index.js","../node_modules/date-fns/esm/subISOWeekYears/index.js","../node_modules/date-fns/esm/differenceInISOWeekYears/index.js","../node_modules/date-fns/esm/differenceInMinutes/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/differenceInQuarters/index.js","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/date-fns/esm/differenceInWeeks/index.js","../node_modules/date-fns/esm/differenceInYears/index.js","../node_modules/date-fns/esm/eachDayOfInterval/index.js","../node_modules/date-fns/esm/eachHourOfInterval/index.js","../node_modules/date-fns/esm/eachMonthOfInterval/index.js","../node_modules/date-fns/esm/startOfQuarter/index.js","../node_modules/date-fns/esm/eachQuarterOfInterval/index.js","../node_modules/date-fns/esm/eachWeekOfInterval/index.js","../node_modules/date-fns/esm/eachWeekendOfInterval/index.js","../node_modules/date-fns/esm/startOfMonth/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/eachWeekendOfMonth/index.js","../node_modules/date-fns/esm/startOfYear/index.js","../node_modules/date-fns/esm/endOfYear/index.js","../node_modules/date-fns/esm/eachWeekendOfYear/index.js","../node_modules/date-fns/esm/eachYearOfInterval/index.js","../node_modules/date-fns/esm/endOfDay/index.js","../node_modules/date-fns/esm/endOfDecade/index.js","../node_modules/date-fns/esm/endOfHour/index.js","../node_modules/date-fns/esm/endOfWeek/index.js","../node_modules/date-fns/esm/endOfISOWeek/index.js","../node_modules/date-fns/esm/endOfISOWeekYear/index.js","../node_modules/date-fns/esm/endOfMinute/index.js","../node_modules/date-fns/esm/endOfQuarter/index.js","../node_modules/date-fns/esm/endOfSecond/index.js","../node_modules/date-fns/esm/endOfToday/index.js","../node_modules/date-fns/esm/endOfTomorrow/index.js","../node_modules/date-fns/esm/endOfYesterday/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../node_modules/date-fns/esm/locale/en-US/index.js","../node_modules/date-fns/esm/subMilliseconds/index.js","../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCWeek/index.js","../node_modules/date-fns/esm/_lib/format/formatters/index.js","../node_modules/date-fns/esm/_lib/format/longFormatters/index.js","../node_modules/date-fns/esm/_lib/protectedTokens/index.js","../node_modules/date-fns/esm/format/index.js","../node_modules/date-fns/esm/_lib/assign/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns/esm/formatDistance/index.js","../node_modules/date-fns/esm/formatDistanceStrict/index.js","../node_modules/date-fns/esm/formatDistanceToNow/index.js","../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","../node_modules/date-fns/esm/formatDuration/index.js","../node_modules/date-fns/esm/formatISO/index.js","../node_modules/date-fns/esm/formatISO9075/index.js","../node_modules/date-fns/esm/formatISODuration/index.js","../node_modules/date-fns/esm/formatRFC3339/index.js","../node_modules/date-fns/esm/formatRFC7231/index.js","../node_modules/date-fns/esm/formatRelative/index.js","../node_modules/date-fns/esm/fromUnixTime/index.js","../node_modules/date-fns/esm/getDate/index.js","../node_modules/date-fns/esm/getDay/index.js","../node_modules/date-fns/esm/getDayOfYear/index.js","../node_modules/date-fns/esm/getDaysInMonth/index.js","../node_modules/date-fns/esm/isLeapYear/index.js","../node_modules/date-fns/esm/getDaysInYear/index.js","../node_modules/date-fns/esm/getDecade/index.js","../node_modules/date-fns/esm/getHours/index.js","../node_modules/date-fns/esm/getISODay/index.js","../node_modules/date-fns/esm/getISOWeek/index.js","../node_modules/date-fns/esm/getISOWeeksInYear/index.js","../node_modules/date-fns/esm/getMilliseconds/index.js","../node_modules/date-fns/esm/getMinutes/index.js","../node_modules/date-fns/esm/getMonth/index.js","../node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js","../node_modules/date-fns/esm/getSeconds/index.js","../node_modules/date-fns/esm/getTime/index.js","../node_modules/date-fns/esm/getUnixTime/index.js","../node_modules/date-fns/esm/getWeekYear/index.js","../node_modules/date-fns/esm/startOfWeekYear/index.js","../node_modules/date-fns/esm/getWeek/index.js","../node_modules/date-fns/esm/getWeekOfMonth/index.js","../node_modules/date-fns/esm/lastDayOfMonth/index.js","../node_modules/date-fns/esm/getWeeksInMonth/index.js","../node_modules/date-fns/esm/getYear/index.js","../node_modules/date-fns/esm/subDays/index.js","../node_modules/date-fns/esm/subMonths/index.js","../node_modules/date-fns/esm/sub/index.js","../node_modules/date-fns/esm/intervalToDuration/index.js","../node_modules/date-fns/esm/isAfter/index.js","../node_modules/date-fns/esm/isBefore/index.js","../node_modules/date-fns/esm/isDate/index.js","../node_modules/date-fns/esm/isEqual/index.js","../node_modules/date-fns/esm/isExists/index.js","../node_modules/date-fns/esm/isFirstDayOfMonth/index.js","../node_modules/date-fns/esm/isFriday/index.js","../node_modules/date-fns/esm/isFuture/index.js","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/_lib/setUTCDay/index.js","../node_modules/date-fns/esm/_lib/setUTCISODay/index.js","../node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCWeek/index.js","../node_modules/date-fns/esm/parse/_lib/parsers/index.js","../node_modules/date-fns/esm/parse/index.js","../node_modules/date-fns/esm/isMatch/index.js","../node_modules/date-fns/esm/isMonday/index.js","../node_modules/date-fns/esm/isPast/index.js","../node_modules/date-fns/esm/startOfHour/index.js","../node_modules/date-fns/esm/isSameHour/index.js","../node_modules/date-fns/esm/isSameWeek/index.js","../node_modules/date-fns/esm/isSameISOWeek/index.js","../node_modules/date-fns/esm/isSameISOWeekYear/index.js","../node_modules/date-fns/esm/startOfMinute/index.js","../node_modules/date-fns/esm/isSameMinute/index.js","../node_modules/date-fns/esm/isSameMonth/index.js","../node_modules/date-fns/esm/isSameQuarter/index.js","../node_modules/date-fns/esm/startOfSecond/index.js","../node_modules/date-fns/esm/isSameSecond/index.js","../node_modules/date-fns/esm/isSameYear/index.js","../node_modules/date-fns/esm/isThisHour/index.js","../node_modules/date-fns/esm/isThisISOWeek/index.js","../node_modules/date-fns/esm/isThisMinute/index.js","../node_modules/date-fns/esm/isThisMonth/index.js","../node_modules/date-fns/esm/isThisQuarter/index.js","../node_modules/date-fns/esm/isThisSecond/index.js","../node_modules/date-fns/esm/isThisWeek/index.js","../node_modules/date-fns/esm/isThisYear/index.js","../node_modules/date-fns/esm/isThursday/index.js","../node_modules/date-fns/esm/isToday/index.js","../node_modules/date-fns/esm/isTomorrow/index.js","../node_modules/date-fns/esm/isTuesday/index.js","../node_modules/date-fns/esm/isWednesday/index.js","../node_modules/date-fns/esm/isWithinInterval/index.js","../node_modules/date-fns/esm/isYesterday/index.js","../node_modules/date-fns/esm/lastDayOfDecade/index.js","../node_modules/date-fns/esm/lastDayOfWeek/index.js","../node_modules/date-fns/esm/lastDayOfISOWeek/index.js","../node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js","../node_modules/date-fns/esm/lastDayOfQuarter/index.js","../node_modules/date-fns/esm/lastDayOfYear/index.js","../node_modules/date-fns/esm/lightFormat/index.js","../node_modules/date-fns/esm/max/index.js","../node_modules/date-fns/esm/min/index.js","../node_modules/date-fns/esm/parseISO/index.js","../node_modules/date-fns/esm/parseJSON/index.js","../node_modules/date-fns/esm/roundToNearestMinutes/index.js","../node_modules/date-fns/esm/setMonth/index.js","../node_modules/date-fns/esm/set/index.js","../node_modules/date-fns/esm/setDate/index.js","../node_modules/date-fns/esm/setDay/index.js","../node_modules/date-fns/esm/setDayOfYear/index.js","../node_modules/date-fns/esm/setHours/index.js","../node_modules/date-fns/esm/setISODay/index.js","../node_modules/date-fns/esm/setISOWeek/index.js","../node_modules/date-fns/esm/setMilliseconds/index.js","../node_modules/date-fns/esm/setMinutes/index.js","../node_modules/date-fns/esm/setQuarter/index.js","../node_modules/date-fns/esm/setSeconds/index.js","../node_modules/date-fns/esm/setWeek/index.js","../node_modules/date-fns/esm/setWeekYear/index.js","../node_modules/date-fns/esm/setYear/index.js","../node_modules/date-fns/esm/startOfDecade/index.js","../node_modules/date-fns/esm/startOfToday/index.js","../node_modules/date-fns/esm/startOfTomorrow/index.js","../node_modules/date-fns/esm/startOfYesterday/index.js","../node_modules/date-fns/esm/subBusinessDays/index.js","../node_modules/date-fns/esm/subHours/index.js","../node_modules/date-fns/esm/subMinutes/index.js","../node_modules/date-fns/esm/subQuarters/index.js","../node_modules/date-fns/esm/subSeconds/index.js","../node_modules/date-fns/esm/subWeeks/index.js","../node_modules/date-fns/esm/subYears/index.js","../node_modules/date-fns/esm/constants/index.js","../node_modules/date-fns/esm/index.js","helpers/domNodes.js","index.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","options","buf","b","Array","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","parse","v","parseInt","slice","stringToBytes","str","unescape","encodeURIComponent","bytes","charCodeAt","DNS","URL","name","version","hashfunc","generateUUID","value","namespace","set","err","md5","msg","md5ToHexEncodedArray","wordsToMd5","bytesToWords","input","output","length32","hexTab","x","hex","charAt","getOutputLength","inputLength8","len","a","c","d","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","Uint32Array","y","lsw","msw","bitRotateLeft","num","cnt","md5cmn","q","s","t","v3","v4","rnds","f","z","ROTL","sha1","K","H","isArray","prototype","call","l","N","Math","ceil","M","_i","j","pow","floor","_i2","W","_t","e","_t2","T","v5","stringToHTML","elementType","fragment","document","createElement","createDocumentFragment","parser","DOMParser","doc","parseFromString","body","children","forEach","element","appendChild","taskForm","data","add","hide","task","id","currentProject","projects","console","log","projectSelection","project","title","prioritySelection","priority","form","description","dueDate","taskItem","DOM","querySelector","onclick","unhide","toggleComplete","classList","toggle","toInteger","dirtyNumber","NaN","number","Number","isNaN","requiredArgs","required","args","toDate","argument","argStr","Object","getTime","warn","stack","addDays","dirtyDate","dirtyAmount","date","amount","setDate","getDate","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","duration","years","months","weeks","days","hours","minutes","seconds","dateWithMonths","dateWithDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","isWeekend","day","getDay","isSunday","isSaturday","addBusinessDays","startedOnWeekend","getHours","sign","fullWeeks","restDays","abs","setHours","addMilliseconds","timestamp","MILLISECONDS_IN_HOUR","addHours","startOfWeek","dirtyOptions","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","diff","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_MINUTE","getDateMillisecondsPart","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","getTimezoneOffset","setSeconds","hasNegativeUTCOffset","millisecondsPartOfTimezoneOffset","startOfDay","MILLISECONDS_IN_DAY","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","setISOWeekYear","dirtyISOWeekYear","isoWeekYear","addISOWeekYears","addMinutes","addQuarters","addSeconds","addWeeks","addYears","areIntervalsOverlapping","dirtyIntervalLeft","dirtyIntervalRight","intervalLeft","intervalRight","leftStartTime","start","leftEndTime","end","rightStartTime","rightEndTime","inclusive","closestIndexTo","dirtyDateToCompare","dirtyDatesArray","dateToCompare","timeToCompare","datesArray","result","minDistance","index","currentDate","distance","closestTo","compareAsc","dateLeft","dateRight","compareDesc","isValid","isSameDay","dateLeftStartOfDay","dateRightStartOfDay","differenceInBusinessDays","calendarDifference","differenceInCalendarISOWeekYears","MILLISECONDS_IN_WEEK","differenceInCalendarISOWeeks","startOfISOWeekLeft","startOfISOWeekRight","differenceInCalendarMonths","yearDiff","monthDiff","getQuarter","quarter","differenceInCalendarQuarters","quarterDiff","differenceInCalendarWeeks","startOfWeekLeft","startOfWeekRight","differenceInCalendarYears","compareLocalAsc","getMinutes","getSeconds","getMilliseconds","differenceInDays","difference","isLastDayNotFull","differenceInMilliseconds","differenceInHours","subISOWeekYears","differenceInISOWeekYears","isLastISOWeekYearNotFull","differenceInMinutes","differenceInMonths","isLastMonthNotFull","differenceInQuarters","differenceInSeconds","differenceInWeeks","differenceInYears","isLastYearNotFull","eachDayOfInterval","dirtyInterval","interval","startDate","endDate","endTime","dates","step","eachHourOfInterval","startTime","setMinutes","eachMonthOfInterval","startOfQuarter","currentMonth","month","eachQuarterOfInterval","startDateQuarter","endDateQuarter","quarters","currentQuarter","eachWeekOfInterval","startDateWeek","endDateWeek","currentWeek","eachWeekendOfInterval","dateInterval","weekends","startOfMonth","endOfMonth","eachWeekendOfMonth","startOfYear","cleanDate","endOfYear","eachWeekendOfYear","eachYearOfInterval","endOfDay","endOfDecade","decade","endOfHour","endOfWeek","endOfISOWeek","endOfISOWeekYear","setMilliseconds","endOfMinute","endOfQuarter","endOfSecond","endOfToday","endOfTomorrow","endOfYesterday","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","replace","addSuffix","comparison","buildFormatLongFn","width","String","defaultWidth","format","formats","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","formatLong","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","context","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","_dirtyOptions","rem100","localize","era","dayPeriod","buildMatchPatternFn","dirtyString","string","matchResult","match","matchPattern","matchedString","parseResult","parsePattern","valueCallback","rest","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","findIndex","pattern","findKey","object","predicate","key","hasOwnProperty","array","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","code","firstWeekContainsDate","subMilliseconds","addLeadingZeros","targetLength","formatters","signedYear","getUTCFullYear","getUTCMonth","getUTCDate","dayPeriodEnumValue","getUTCHours","toUpperCase","h","m","getUTCMinutes","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","getUTCDayOfYear","setUTCMonth","setUTCHours","startOfYearTimestamp","startOfUTCISOWeek","getUTCDay","setUTCDate","getUTCISOWeekYear","setUTCFullYear","startOfUTCISOWeekYear","getUTCISOWeek","startOfUTCWeek","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","dayPeriodEnum","G","unit","lightFormatters","Y","signedWeekYear","weekYear","twoDigitYear","R","u","Q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","isoDayOfWeek","B","k","X","_localize","originalDate","_originalDate","timezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","O","formatTimezoneShort","dirtyDelimiter","absOffset","delimiter","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","p","P","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","defaultLocale","utcDate","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","assign","target","dirtyObject","property","cloneObject","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyBaseDate","localizeOptions","Boolean","offsetInSeconds","includeSeconds","nearestMonth","monthsSinceStartOfYear","MINUTES_IN_YEAR","formatDistanceStrict","roundingMethod","roundingMethodFn","formatDistanceToNow","formatDistanceToNowStrict","defaultFormat","formatDuration","zero","reduce","acc","addChunk","formatISO","representation","tzOffset","dateDelimiter","timeDelimiter","absoluteOffset","hourOffset","minuteOffset","hour","minute","second","separator","formatISO9075","formatISODuration","_duration$years","_duration$months","_duration$days","_duration$hours","_duration$minutes","_duration$seconds","formatRFC3339","fractionDigits","fractionalSecond","formatRFC7231","dayName","monthName","baseDate","utcBaseDate","fromUnixTime","dirtyUnixTime","unixTime","getDayOfYear","getDaysInMonth","monthIndex","lastDayOfMonth","isLeapYear","getDaysInYear","getDecade","getISODay","getISOWeek","getISOWeeksInYear","thisYear","nextYear","valueOf","getOverlappingDaysInIntervals","isOverlapping","overlapStartDate","overlapEndDate","differenceInMs","getUnixTime","getWeekYear","startOfWeekYear","getWeek","getWeekOfMonth","currentDayOfMonth","startWeekDay","lastDayOfFirstWeek","weekNumber","remainingDaysAfterFirstWeek","getWeeksInMonth","getYear","subDays","subMonths","sub","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","intervalToDuration","_ref","remainingMonths","remainingDays","remainingHours","remainingMinutes","remainingSeconds","isAfter","isBefore","isDate","isEqual","dirtyLeftDate","dirtyRightDate","isExists","isFirstDayOfMonth","isFriday","isFuture","isLastDayOfMonth","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","setUTCISODay","setUTCISOWeek","dirtyISOWeek","setUTCWeek","dirtyWeek","MILLISECONDS_IN_SECOND","numericPatterns","hour23h","hour24h","hour11h","hour12h","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extended","extendedOptionalSeconds","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","rangeEndCentury","isPreviousCentury","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","flags","incompatibleTokens","isTwoDigitYear","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","subPriority","wholeWeekDays","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","TIMEZONE_UNIT_PRIORITY","notWhitespaceRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","tokens","usedTokens","incompatibleToken","usedToken","fullToken","uniquePrioritySetters","setter","sort","filter","setterArray","convertedDate","isMatch","isMonday","isPast","startOfHour","isSameHour","dateLeftStartOfHour","dateRightStartOfHour","isSameWeek","dateLeftStartOfWeek","dateRightStartOfWeek","isSameISOWeek","isSameISOWeekYear","dateLeftStartOfYear","dateRightStartOfYear","startOfMinute","isSameMinute","dateLeftStartOfMinute","dateRightStartOfMinute","isSameMonth","isSameQuarter","dateLeftStartOfQuarter","dateRightStartOfQuarter","startOfSecond","isSameSecond","dateLeftStartOfSecond","dateRightStartOfSecond","isSameYear","isThisHour","isThisISOWeek","isThisMinute","isThisMonth","isThisQuarter","isThisSecond","isThisWeek","isThisYear","isThursday","isToday","isTomorrow","isTuesday","isWednesday","isWithinInterval","isYesterday","lastDayOfDecade","lastDayOfWeek","lastDayOfISOWeek","lastDayOfISOWeekYear","lastDayOfQuarter","lastDayOfYear","lightFormat","max","min","DEFAULT_ADDITIONAL_DIGITS","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","parseTime","parseTimezone","split","timeString","exec","regex","captures","century","isWeekDate","parseDateUnit","validateWeekDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","parseTimeUnit","validateTime","parseFloat","timezoneString","validateTimezone","fourthOfJanuaryDay","daysInMonths","_year","_hours","parseJSON","parts","UTC","roundToNearestMinutes","nearestTo","roundedMinutes","remainderMinutes","addedMinutes","dirtyMonth","dateWithDesiredMonth","dirtyDayOfMonth","setDay","delta","setDayOfYear","dirtyDayOfYear","dirtyHours","setISODay","setISOWeek","dirtyMilliseconds","dirtyMinutes","setQuarter","dirtyQuarter","oldQuarter","dirtySeconds","setWeek","setWeekYear","dirtyWeekYear","setYear","dirtyYear","startOfDecade","startOfToday","startOfTomorrow","startOfYesterday","subBusinessDays","subHours","subMinutes","subQuarters","subSeconds","subWeeks","subYears","maxTime","minTime","header","toggler","home","sidebar","container","projectTitles","addProjectForm","dashboard","addTaskForm","cancel","AppDOM","closed","remove","toggleHide","addProjectToSidebar","innerHTML","AppData","html","projectEl","addProjectToDashboard","activeProject","current","querySelectorAll","textContent","addTaskToDashboard","currentTask","tasks","currentTaskItem","AppForms","createTaskForm","createProjectForm","onsubmit","preventDefault","newProject","Project","create","type","formInput","edit","Data","storeProject","removeProject","item","isDelete","isActive","Task","completed","firstList","addTask","secondList","bundleURL","getBundleURLCached","getBundleURL","matches","getBaseURL","url","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","href","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","module","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","overlay","createErrorOverlay","getElementById","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","cache","some","cb"],"mappings":"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I,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiB+C,IAA9B;AACA,SAAOlD,IAAP;AACD;;;;;;;;;AC/CD;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASiF,eAAT,CAAyBnF,SAAzB,EAAoCC,WAApC,EAAiD;AAC9D,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAeD,SAAf,EAA0B,qBAAeA,SAAf,IAA4BG,MAAtD,CAAP;AACD;;;;;;;;;ACtCD;;AACA;;AACA;;;;AACA,IAAI2D,sBAAsB,GAAG,KAA7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAASsB,UAAT,CAAoBpF,SAApB,EAA+BC,WAA/B,EAA4C;AACzD,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAgBD,SAAhB,EAA2BG,MAAM,GAAG2D,sBAApC,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASuB,WAAT,CAAqBrF,SAArB,EAAgCC,WAAhC,EAA6C;AAC1D,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,MAAIe,MAAM,GAAGb,MAAM,GAAG,CAAtB;AACA,SAAO,qBAAUH,SAAV,EAAqBgB,MAArB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASsE,UAAT,CAAoBtF,SAApB,EAA+BC,WAA/B,EAA4C;AACzD,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAgBD,SAAhB,EAA2BG,MAAM,GAAG,IAApC,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASoF,QAAT,CAAkBvF,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,MAAIiB,IAAI,GAAGf,MAAM,GAAG,CAApB;AACA,SAAO,qBAAQH,SAAR,EAAmBkB,IAAnB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASsE,QAAT,CAAkBxF,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAUD,SAAV,EAAqBG,MAAM,GAAG,EAA9B,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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D;AACA,MAAIuE,MAAM,GAAGvE,IAAI,IAAI4G,UAAU,GAAGS,kBAAjB,CAAjB,CAVwE,CAUjB;;AAEvD,SAAO9C,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;AACD;;;;;;;;;ACxCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS+C,oBAAT,CAA8BjF,aAA9B,EAA6CC,cAA7C,EAA6D;AAC1E,uBAAa,CAAb,EAAgBrP,SAAhB;AACA,MAAI+N,IAAI,GAAG,oBAAmBqB,aAAnB,EAAkCC,cAAlC,IAAoD,CAA/D;AACA,SAAOtB,IAAI,GAAG,CAAP,GAAW5H,IAAI,CAACM,KAAL,CAAWsH,IAAX,CAAX,GAA8B5H,IAAI,CAACC,IAAL,CAAU2H,IAAV,CAArC;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASuG,mBAAT,CAA6BlF,aAA7B,EAA4CC,cAA5C,EAA4D;AACzE,uBAAa,CAAb,EAAgBrP,SAAhB;AACA,MAAI+N,IAAI,GAAG,oBAAyBqB,aAAzB,EAAwCC,cAAxC,IAA0D,IAArE;AACA,SAAOtB,IAAI,GAAG,CAAP,GAAW5H,IAAI,CAACM,KAAL,CAAWsH,IAAX,CAAX,GAA8B5H,IAAI,CAACC,IAAL,CAAU2H,IAAV,CAArC;AACD;;;;;;;;;ACjCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASwG,iBAAT,CAA2BnF,aAA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AO,qBAAOmK,IAAP,EAAa2a,SAAb,EAAwB9kB,OAAxB,CAAP;AACD;;;;;;;;;AC1FD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASmpB,YAAT,CAAsBC,aAAtB,EAAqC;AAClD,uBAAa,CAAb,EAAgB9pB,SAAhB;AACA,MAAI+pB,QAAQ,GAAG,qBAAUD,aAAV,CAAf;AACA,SAAO,oBAAOC,QAAQ,GAAG,IAAlB,CAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS/e,OAAT,CAAiBL,SAAjB,EAA4B;AACzC,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,MAAI6K,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIO,UAAU,GAAGL,IAAI,CAACG,OAAL,EAAjB;AACA,SAAOE,UAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASuB,MAAT,CAAgB9B,SAAhB,EAA2B;AACxC,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,MAAI6K,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAI6B,GAAG,GAAG3B,IAAI,CAAC4B,MAAL,EAAV;AACA,SAAOD,GAAP;AACD;;;;;;;;;AC7BD;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASwd,YAAT,CAAsBrf,SAAtB,EAAiC;AAC9C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,MAAI6K,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIoD,I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;AAEe,SAASkB,eAAT,CAAyB9I,SAAzB,EAAoC;AACjD,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,MAAI6K,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAI4V,YAAY,GAAG1V,IAAI,CAAC4I,eAAL,EAAnB;AACA,SAAO8M,YAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAShN,UAAT,CAAoB5I,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,MAAI6K,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIoB,OAAO,GAAGlB,IAAI,CAAC0I,UAAL,EAAd;AACA,SAAOxH,OAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASV,QAAT,CAAkBV,SAAlB,EAA6B;AAC1C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,MAAI6K,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAI6K,KAAK,GAAG3K,IAAI,CAACQ,QAAL,EAAZ;AACA,SAAOmK,KAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA,IAAItG,mBAAmB,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAAzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAAS2b,6BAAT,CAAuCxa,iBAAvC,EAA0DC,kBAA1D,EAA8E;AAC3F,uBAAa,CAAb,EAAgBtQ,SAAhB;AACA,MAAIuQ,YAAY,GAAGF,iBAAiB,IAAI,EAAxC;AACA,MAAIG,aAAa,GAAGF,kBAAkB,IAAI,EAA1C;AACA,MAAIG,aAAa,GAAG,oBAAOF,YAAY,CAACG,KAApB,EAA2BnG,OAA3B,EAApB;AACA,MAAIoG,WAAW,GAAG,oBAAOJ,YAAY,CAACK,GAApB,EAAyBrG,OAAzB,EAAlB;AACA,MAAIsG,cAAc,GAAG,oBAAOL,aAAa,CAACE,KAArB,EAA4BnG,OAA5B,EAArB;AACA,MAAIuG,YAAY,GAAG,oBAAON,aAAa,CAACI,GAArB,EAA0BrG,OAA1B,EAAnB,CAP2F,CAOnC;;AAExD,MAAI,EAAEkG,aAAa,IAAIE,WAAjB,IAAgCE,cAAc,IAAIC,YAApD,CAAJ,EAAuE;AACrE,UAAM,IAAIhD,UAAJ,CAAe,kBAAf,CAAN;AACD;;AAED,MAAIgd,aAAa,GAAGra,aAAa,GAAGK,YAAhB,IAAgCD,cAAc,GAAGF,WAArE;;AAEA,MAAI,CAACma,aAAL,EAAoB;AAClB,WAAO,CAAP;AACD;;AAED,MAAIC,gBAAgB,GAAGla,cAAc,GAAGJ,aAAjB,GAAiCA,aAAjC,GAAiDI,cAAxE;AACA,MAAIma,cAAc,GAAGla,YAAY,GAAGH,WAAf,GAA6BA,WAA7B,GAA2CG,YAAhE;AACA,MAAIma,cAAc,GAAGD,cAAc,GAAGD,gBAAtC;AACA,SAAO5kB,IAAI,CAACC,IAAL,CAAU6kB,cAAc,GAAG/b,mBAA3B,CAAP;AACD;;;;;;;;;AC5FD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASsE,UAAT,CAAoB7I,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,MAAI6K,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIqB,OAAO,GAAGnB,IAAI,CAAC2I,UAAL,EAAd;AACA,SAAOxH,OAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASzB,OAAT,CAAiBI,SAAjB,EAA4B;AACzC,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,MAAI6K,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAI0C,SAAS,GAAGxC,IAAI,CAACN,OAAL,EAAhB;AACA,SAAO8C,SAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS6d,WAAT,CAAqBvgB,SAArB,EAAgC;AAC7C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,SAAOmG,IAAI,CAACM,KAAL,CAAW,oBAAQkE,SAAR,IAAqB,IAAhC,CAAP;AACD;;;;;;;;;AC3BD;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASwgB,WAAT,CAAqBxgB,SAArB,EAAgC8C,YAAhC,EAA8C;AAC3D,uBAAa,CAAb,EAAgBzN,SAAhB;AACA,MAAI6K,IAAI,GAAG,qBAAOF,SAAP,CAAX;AACA,MAAIuD,IAAI,GAAGrD,IAAI,CAACW,WAAL,EAAX;AACA,MAAI9K,OAAO,GAAG+M,YAAY,IAAI,EAA9B;AACA,MAAIC,MAAM,GAAGhN,OAAO,CAACgN,MAArB;AACA,MAAI6T,2BAA2B,GAAG7T,MAAM,IAAIA,MAAM,CAAChN,OAAjB,IAA4BgN,MAAM,CAAChN,OAAP,CAAe2e,qBAA7E;AACA,MAAImC,4BAA4B,GAAGD,2BAA2B,IAAI,IAA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,CAAhD,EAAoEnK,OAApE,IAA+E,CAAtF;AACD;;;;;;;;;ACvCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASmrB,OAAT,CAAiBlhB,SAAjB,EAA4B;AACzC,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,MAAI6K,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIuD,IAAI,GAAGrD,IAAI,CAACW,WAAL,EAAX;AACA,SAAO0C,IAAP;AACD;;;;;;;;;AC7BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS4d,OAAT,CAAiBnhB,SAAjB,EAA4BC,WAA5B,EAAyC;AACtD,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAQD,SAAR,EAAmB,CAACG,MAApB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASihB,SAAT,CAAmBphB,SAAnB,EAA8BC,WAA9B,EAA2C;AACxD,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAUD,SAAV,EAAqB,CAACG,MAAtB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASuiB,QAAT,CAAkBniB,SAAlB,EAA6BsG,kBAA7B,EAAiD;AAC9D,uBAAa,CAAb,EAAgBjR,SAAhB;AACA,MAAI6K,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIwG,aAAa,GAAG,oBAAOF,kBAAP,CAApB;AACA,SAAOpG,IAAI,CAACN,OAAL,KAAiB4G,aAAa,CAAC5G,OAAd,EAAxB;AACD;;;;;;;;;AC9BD;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASwiB,MAAT,CAAgBrqB,KAAhB,EAAuB;AACpC,sBAAa,CAAb,EAAgB1C,SAAhB;AACA,SAAO0C,KAAK,YAAYvB,IAAjB,IAAyB,OAAOuB,KAAP,KAAiB,QAAjB,IAA6B4H,MAAM,CAACvE,SAAP,CAAiBpG,QAAjB,CAA0BqG,IAA1B,CAA+BtD,KAA/B,MAA0C,eAAvG;AACD;;;;;;;;;ACzCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASsqB,OAAT,CAAiBC,aAAjB,EAAgCC,cAAhC,EAAgD;AAC7D,uBAAa,CAAb,EAAgBltB,SAAhB;AACA,MAAI6R,QAAQ,GAAG,oBAAOob,aAAP,CAAf;AACA,MAAInb,SAAS,GAAG,oBAAOob,cAAP,CAAhB;AACA,SAAOrb,QAAQ,CAACtH,OAAT,OAAuBuH,SAAS,CAACvH,OAAV,EAA9B;AACD;;;;;;;;;ACjCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS6lB,iBAAT,CAA2BrkB,aAA3B,EAA0CC,cAA1C,EAA0D;AACvE,uBAAa,CAAb,EAAgBrP,SAAhB;AACA,MAAI0zB,mBAAmB,GAAG,oBAAmBtkB,aAAnB,CAA1B;AACA,MAAIukB,oBAAoB,GAAG,oBAAmBtkB,cAAnB,CAA3B;AACA,SAAOqkB,mBAAmB,CAACnpB,OAApB,OAAkCopB,oBAAoB,CAACppB,OAArB,EAAzC;AACD;;;;;;;;;ACrCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASqpB,aAAT,CAAuBjpB,SAAvB,EAAkC;AAC/C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,MAAI6K,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACAE,EAAAA,IAAI,CAACiE,UAAL,CAAgB,CAAhB,EAAmB,CAAnB;AACA,SAAOjE,IAAP;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASgpB,YAAT,CAAsBzkB,aAAtB,EAAqCC,cAArC,EAAqD;AAClE,uBAAa,CAAb,EAAgBrP,SAAhB;AACA,MAAI8zB,qBAAqB,GAAG,oBAAc1kB,aAAd,CAA5B;AACA,MAAI2kB,sBAAsB,GAAG,oBAAc1kB,cAAd,CAA7B;AACA,SAAOykB,qBAAqB,CAACvpB,OAAtB,OAAoCwpB,sBAAsB,CAACxpB,OAAvB,EAA3C;AACD;;;;;;;;;AClCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASypB,WAAT,CAAqB5kB,aAArB,EAAoCC,cAApC,EAAoD;AACjE,uBAAa,CAAb,EAAgBrP,SAAhB;AACA,MAAI6R,QAAQ,GAAG,oBAAOzC,aAAP,CAAf;AACA,MAAI0C,SAAS,GAAG,oBAAOzC,cAAP,CAAhB;AACA,SAAOwC,QAAQ,CAACrG,WAAT,OAA2BsG,SAAS,CAACtG,WAAV,EAA3B,IAAsDqG,QAAQ,CAACxG,QAAT,OAAwByG,SAAS,CAACzG,QAAV,EAArF;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS4oB,aAAT,CAAuB7kB,aAAvB,EAAsCC,cAAtC,EAAsD;AACnE,uBAAa,CAAb,EAAgBrP,SAAhB;AACA,MAAIk0B,sBAAsB,GAAG,oBAAe9kB,aAAf,CAA7B;AACA,MAAI+kB,uBAAuB,GAAG,oBAAe9kB,cAAf,CAA9B;AACA,SAAO6kB,sBAAsB,CAAC3pB,OAAvB,OAAqC4pB,uBAAuB,CAAC5pB,OAAxB,EAA5C;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS6pB,aAAT,CAAuBzpB,SAAvB,EAAkC;AAC/C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,MAAI6K,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACAE,EAAAA,IAAI,CAACuM,eAAL,CAAqB,CAArB;AACA,SAAOvM,IAAP;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASwpB,YAAT,CAAsBjlB,aAAtB,EAAqCC,cAArC,EAAqD;AAClE,uBAAa,CAAb,EAAgBrP,SAAhB;AACA,MAAIs0B,qBAAqB,GAAG,oBAAcllB,aAAd,CAA5B;AACA,MAAImlB,sBAAsB,GAAG,oBAAcllB,cAAd,CAA7B;AACA,SAAOilB,qBAAqB,CAAC/pB,OAAtB,OAAoCgqB,sBAAsB,CAAChqB,OAAvB,EAA3C;AACD;;;;;;;;;AClCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASiqB,UAAT,CAAoBplB,aAApB,EAAmCC,cAAnC,EAAmD;AAChE,uBAAa,CAAb,EAAgBrP,SAAhB;AACA,MAAI6R,QAAQ,GAAG,oBAAOzC,aAAP,CAAf;AACA,MAAI0C,SAAS,GAAG,oBAAOzC,cAAP,CAAhB;AACA,SAAOwC,QAAQ,CAACrG,WAAT,OAA2BsG,SAAS,CAACtG,WAAV,EAAlC;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASipB,UAAT,CAAoB9pB,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,SAAO,oBAAWmB,IAAI,CAACC,GAAL,EAAX,EAAuBuJ,SAAvB,CAAP;AACD;;;;;;;;;AChCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS+pB,aAAT,CAAuB/pB,SAAvB,EAAkC;AAC/C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,SAAO,oBAAc2K,SAAd,EAAyBxJ,IAAI,CAACC,GAAL,EAAzB,CAAP;AACD;;;;;;;;;ACjCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASuzB,YAAT,CAAsBhqB,SAAtB,EAAiC;AAC9C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,SAAO,oBAAamB,IAAI,CAACC,GAAL,EAAb,EAAyBuJ,SAAzB,CAAP;AACD;;;;;;;;;AChCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASiqB,WAAT,CAAqBjqB,SAArB,EAAgC;AAC7C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,SAAO,oBAAYmB,IAAI,CAACC,GAAL,EAAZ,EAAwBuJ,SAAxB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASkqB,aAAT,CAAuBlqB,SAAvB,EAAkC;AAC/C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,SAAO,oBAAcmB,IAAI,CAACC,GAAL,EAAd,EAA0BuJ,SAA1B,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASmqB,YAAT,CAAsBnqB,SAAtB,EAAiC;AAC9C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,SAAO,oBAAamB,IAAI,CAACC,GAAL,EAAb,EAAyBuJ,SAAzB,CAAP;AACD;;;;;;;;;AChCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASoqB,UAAT,CAAoBpqB,SAApB,EAA+BjK,OAA/B,EAAwC;AACrD,uBAAa,CAAb,EAAgBV,SAAhB;AACA,SAAO,oBAAW2K,SAAX,EAAsBxJ,IAAI,CAACC,GAAL,EAAtB,EAAkCV,OAAlC,CAAP;AACD;;;;;;;;;ACzCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASs0B,UAAT,CAAoBrqB,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,SAAO,oBAAW2K,SAAX,EAAsBxJ,IAAI,CAACC,GAAL,EAAtB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS6zB,UAAT,CAAoBtqB,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,SAAO,oBAAO2K,SAAP,EAAkB8B,MAAlB,OAA+B,CAAtC;AACD;;;;;;;;;AC3BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASyoB,OAAT,CAAiBvqB,SAAjB,EAA4B;AACzC,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,SAAO,oBAAU2K,SAAV,EAAqBxJ,IAAI,CAACC,GAAL,EAArB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS+zB,UAAT,CAAoBxqB,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,SAAO,qBAAU2K,SAAV,EAAqB,oBAAQxJ,IAAI,CAACC,GAAL,EAAR,EAAoB,CAApB,CAArB,CAAP;AACD;;;;;;;;;AChCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASg0B,SAAT,CAAmBzqB,SAAnB,EAA8B;AAC3C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,SAAO,oBAAO2K,SAAP,EAAkB8B,MAAlB,OAA+B,CAAtC;AACD;;;;;;;;;AC3BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS4oB,WAAT,CAAqB1qB,SAArB,EAAgC;AAC7C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,SAAO,oBAAO2K,SAAP,EAAkB8B,MAAlB,OAA+B,CAAtC;AACD;;;;;;;;;AC3BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS6oB,gBAAT,CAA0B3qB,SAA1B,EAAqCgK,aAArC,EAAoD;AACjE,uBAAa,CAAb,EAAgB3U,SAAhB;AACA,MAAI4U,QAAQ,GAAGD,aAAa,IAAI,EAAhC;AACA,MAAIuF,IAAI,GAAG,oBAAOvP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B,CAArB;AACA3K,EAAAA,IAAI,CAACsC,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,SAAOtC,IAAP;AACD;;;;;;;;;ACpCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASgrB,aAAT,CAAuBlrB,SAAvB,EAAkC;AAC/C,uBAAa,CAAb,EAAgB3K,SAAhB;AACA,MAAI6K,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIuD,IAAI,GAAGrD,IAAI,CAACW,WAAL,EAAX;AACAX,EAAAA,IAAI,CAACU,WAAL,CAAiB2C,IAAI,GAAG,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACArD,EAAAA,IAAI,CAACsC,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,SAAOtC,IAAP;AACD;;;;;;;;;AChCD;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIqa,sBAAsB,GAAG,gCAA7B;AACA,IAAIE,mBAAmB,GAAG,cAA1B;AACA,IAAIC,iBAAiB,GAAG,KAAxB;AACA,IAAIC,6BAA6B,GAAG,UAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAASwQ,WAAT,CAAqBnrB,SAArB,EAAgC4a,cAAhC,EAAgD;AAC7D,uBAAa,CAAb,EAAgBvlB,SAAhB;AACA,MAAIwlB,SAAS,GAAGlM,MAAM,CAACiM,cAAD,CAAtB;AACA,MAAI/B,Y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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASe,UAAT,CAAoBnE,SAApB,EAA+BovB,YAA/B,EAA6C;AAC1D,uBAAa,CAAb,EAAgB/5B,SAAhB;AACA,MAAI6K,IAAI,GAAG,qBAAOF,SAAP,CAAX;AACA,MAAIqB,OAAO,GAAG,oBAAU+tB,YAAV,CAAd;AACAlvB,EAAAA,IAAI,CAACiE,UAAL,CAAgB9C,OAAhB;AACA,SAAOnB,IAAP;AACD;;;;;;;;;AChCD;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASmvB,OAAT,CAAiBrvB,SAAjB,EAA4BsjB,SAA5B,EAAuCxgB,YAAvC,EAAqD;AAClE,uBAAa,CAAb,EAAgBzN,SAAhB;AACA,MAAI6K,IAAI,GAAG,qBAAOF,SAAP,CAAX;AACA,MAAIgY,IAAI,GAAG,qBAAUsL,SAAV,CAAX;AACA,MAAIlgB,IAAI,GAAG,oBAAQlD,IAAR,EAAc4C,YAAd,IAA8BkV,IAAzC;AACA9X,EAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiB+C,IAAI,GAAG,CAArC;AACA,SAAOlD,IAAP;AACD;;;;;;;;;ACxDD;;AACA;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASovB,WAAT,CAAqBtvB,SAArB,EAAgCuvB,aAAhC,EAA+CzsB,YA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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS4vB,QAAT,CAAkB/vB,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAASD,SAAT,EAAoB,CAACG,MAArB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS6vB,UAAT,CAAoBhwB,SAApB,EAA+BC,WAA/B,EAA4C;AACzD,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAWD,SAAX,EAAsB,CAACG,MAAvB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS8vB,WAAT,CAAqBjwB,SAArB,EAAgCC,WAAhC,EAA6C;AAC1D,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAYD,SAAZ,EAAuB,CAACG,MAAxB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS+vB,UAAT,CAAoBlwB,SAApB,EAA+BC,WAA/B,EAA4C;AACzD,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAWD,SAAX,EAAsB,CAACG,MAAvB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASgwB,QAAT,CAAkBnwB,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAASD,SAAT,EAAoB,CAACG,MAArB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASiwB,QAAT,CAAkBpwB,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD,uBAAa,CAAb,EAAgB5K,SAAhB;AACA,MAAI8K,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAASD,SAAT,EAAoB,CAACG,MAArB,CAAP;AACD;;;;;;;;;AC9BD;AACA;AACA;AACA;AACA;AACA;AACO,IAAIkwB,OAAO,GAAG70B,IAAI,CAACK,GAAL,CAAS,EAAT,EAAa,CAAb,IAAkB,EAAlB,GAAuB,EAAvB,GAA4B,EAA5B,GAAiC,IAA/C;AACP;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAIy0B,OAAO,GAAG,CAACD,OAAfbP;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;ACrMO,IAAME,MAAM,GAAG;AACpBC,EAAAA,OAAO,EAAE/zB,QAAQ,CAACgC,aAAT,CAAuB,cAAvB,CADW;AAEpBgyB,EAAAA,IAAI,EAAEh0B,QAAQ,CAACgC,aAAT,CAAuB,OAAvB;AAFc,CAAf;;AAKA,IAAMiyB,OAAO,GAAG;AACrBA,EAAAA,OAAO,EAAEj0B,QAAQ,CAACgC,aAAT,CAAuB,UAAvB,CADY;AAErBkyB,EAAAA,SAAS,EAAEl0B,QAAQ,CAACgC,aAAT,CAAuB,mBAAvB,CAFU;AAGrBmyB,EAAAA,aAAa,EAAEn0B,QAAQ,CAACgC,aAAT,CAAuB,gBAAvB;AAHM,CAAhB;;AAMA,IAAMoyB,cAAc,GAAG;AAC5BzyB,EAAAA,IAAI,EAAE3B,QAAQ,CAACgC,aAAT,CAAuB,aAAvB,CADsB;AAE5BjG,EAAAA,KAAK,EAAEiE,QAAQ,CAACgC,aAAT,CAAuB,eAAvB;AAFqB,CAAvB;;AAKA,IAAMqyB,SAAS,GAAG;AACvBA,EAAAA,SAAS,EAAEr0B,QAAQ,CAACgC,aAAT,CAAuB,YAAvB,CADY;AAEvBT,EAAAA,OAAO,EAAEvB,QAAQ,CAACgC,aAAT,CAAuB,eAAvB;AAFc,CAAlB;;AAKA,IAAMsyB,WAAW,GAAG;AACzBP,EAAAA,OAAO,EAAE/zB,QAAQ,CAACgC,aAAT,CAAuB,qBAAvB,CADgB;AAEzBkyB,EAAAA,SAAS,EAAEl0B,QAAQ,CAACgC,aAAT,CAAuB,uBAAvB,CAFc;AAGzBL,EAAAA,IAAI,EAAE3B,QAAQ,CAACgC,aAAT,CAAuB,cAAvB,CAHmB;AAIzBuyB,EAAAA,MAAM,EAAEv0B,QAAQ,CAACgC,aAAT,CAAuB,gBAAvB,CAJiB;AAKzBR,EAAAA,KAAK,EAAExB,QAAQ,CAACgC,aAAT,CAAuB,QAAvB,CALkB;AAMzBJ,EAAAA,WAAW,EAAE5B,QAAQ,CAACgC,aAAT,CAAuB,cAAvB,CANY;AAOzBN,EAAAA,QAAQ,EAAE1B,QAAQ,CAACgC,aAAT,CAAuB,WAAvB,CAPe;AAQzByB,EAAAA,IAAI,EAAEzD,QAAQ,CAACgC,aAAT,CAAuB,OAAvB,CARmB;AASzBT,EAAAA,OAAO,EAAEvB,QAAQ,CAACgC,aAAT,CAAuB,UAAvB;AATgB,CAApB;;;;;ACrBP;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;AAQA,IAAMwyB,MAAM,GAAI,YAAM;AACpB,MAAMzzB,IAAI,GAAG,SAAPA,IAAO,CAACL,OAAD,EAAU+zB,MAAV,EAAqB;AAChC;AACA/zB,IAAAA,OAAO,CAAC0B,SAAR,CAAkBtB,GAAlB,CAAsB2zB,MAAM,GAAGA,MAAH,GAAY,MAAxC;AACD,GAHD;;AAIA,MAAMvyB,MAAM,GAAG,SAATA,MAAS,CAACxB,OAAD,EAAU+zB,MAAV,EAAqB;AAClC;AACA/zB,IAAAA,OAAO,CAAC0B,SAAR,CAAkBsyB,MAAlB,CAAyBD,MAAM,GAAGA,MAAH,GAAY,MAA3C;AACD,GAHD;;AAIA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAACj0B,OAAD,EAAU+zB,MAAV,EAAqB;AACtC;AACA/zB,IAAAA,OAAO,CAAC0B,SAAR,CAAkBC,MAAlB,CAAyBoyB,MAAM,GAAGA,MAAH,GAAY,MAA3C;AACD,GAHD;;AAIA,MAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCX,sBAAQE,aAAR,CAAsBU,SAAtB,GAAkC,EAAlC,CADgC,CAEhC;;AACAC,IAAAA,OAAO,CAAC3zB,QAAR,CAAiBV,OAAjB,CAAyB,UAAAc,OAAO,EAAI;AAClC,UAAIwzB,IAAI,kBAAWxzB,OAAO,CAACC,KAAnB,WAAR;AACA,UAAMwzB,SAAS,GAAG,0CAAgBD,IAAhB,GAAwB,IAAxB,CAAlB;;AACAC,MAAAA,SAAS,CAAC/yB,OAAV,GAAoB,YAAM;AACxBuyB,QAAAA,MAAM,CAACS,qBAAP,CAA6B1zB,OAA7B,EADwB,CAExB;AACD,OAHD;;AAIA0yB,wBAAQE,aAAR,CAAsBxzB,WAAtB,CAAkCq0B,SAAlC;AACD,KARD;AASD,GAZD;;AAcA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,OAAO,EAAI;AAC/BhB,IAAAA,aAAa,CAACiB,gBAAd,CAA+B,IAA/B,EAAqC30B,OAArC,CAA6C,UAAAc,OAAO,EAAI;AACtD,UAAIA,OAAO,CAAC8zB,WAAR,KAAwBF,OAAO,CAAC3zB,KAApC,EAA2C;AACzCD,QAAAA,OAAO,CAACa,SAAR,CAAkBtB,GAAlB,CAAsB,QAAtB;AACD,OAFD,MAEO;AACLS,QAAAA,OAAO,CAACa,SAAR,CAAkBsyB,MAAlB,CAAyB,QAAzB;AACD;AACF,KAND;AAOD,GARD;;AASA,MAAMO,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAE,OAAO,EAAI;AACvCd,wBAAU9yB,OAAV,CAAkBszB,SAAlB,GAA8B,EAA9B;AACA,QAAMG,SAAS,GAAG,8CAAoBG,OAAO,CAAC3zB,KAA5B,YAA0C,KAA1C,CAAlB;AACAwzB,IAAAA,SAAS,CAAC5yB,SAAV,CAAoBtB,GAApB,WAA2Bq0B,OAAO,CAACl0B,EAAnC;;AACAozB,wBAAU9yB,OAAV,CAAkBZ,WAAlB,CAA8Bq0B,SAA9B;;AACAX,wBAAU9yB,OAAV,CAAkBZ,WAAlB,CAA8B20B,kBAAkB,CAACH,OAAD,CAAhD;;AACAD,IAAAA,aAAa,CAACC,OAAD,CAAb;AACD,GAPD;;AASA,MAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAH,OAAO,EAAI;AACpC/zB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC8zB,OAAlC;AACA,QAAMI,WAAW,GAAG,4CAApB;AACAJ,IAAAA,OAAO,CAACK,KAAR,CAAc/0B,OAAd,CAAsB,UAAAO,IAAI,EAAI;AAC5B,UAAMy0B,eAAe,GAAG,wBAASz0B,IAAT,EAAewzB,MAAf,EAAuBW,OAAvB,EAAgCL,OAAO,CAAC3zB,QAAxC,CAAxB;AACAo0B,MAAAA,WAAW,CAAC50B,WAAZ,CAAwB80B,eAAxB;AACAr0B,MAAAA,OAAO,CAACC,GAAR,CAAYo0B,eAAZ;AACAC,MAAAA,QAAQ,CAACC,cAAT,CAAwBF,eAAxB,EAAyCz0B,IAAzC,EAA+Cm0B,OAA/C,EAAwD,MAAxD;AACD,KALD;AAMA,WAAOI,WAAP;AACD,GAVD;;AAYA,SAAO;AACLx0B,IAAAA,IAAI,EAAJA,IADK;AAELmB,IAAAA,MAAM,EAANA,MAFK;AAGLyyB,IAAAA,UAAU,EAAVA,UAHK;AAILC,IAAAA,mBAAmB,EAAnBA,mBAJK;AAKLK,IAAAA,qBAAqB,EAArBA;AALK,GAAP;AAOD,CAhEc,EAAf;;AAkEA,IAAMS,QAAQ,GAAI,YAAM;AACtB,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BxB,6BAAezyB,IAAf,CAAoBk0B,QAApB,GAA+B,UAAAp2B,CAAC,EAAI;AAClCA,MAAAA,CAAC,CAACq2B,cAAF;AACA,UAAMC,UAAU,GAAG,IAAIC,OAAJ,CAAY5B,yBAAer4B,KAAf,CAAqBT,KAAjC,CAAnB;AACAy6B,MAAAA,UAAU,CAACE,MAAX;AACAzB,MAAAA,MAAM,CAACI,mBAAP;AACAJ,MAAAA,MAAM,CAACS,qBAAP,CAA6Bc,UAA7B;AACA3B,+BAAer4B,KAAf,CAAqBT,KAArB,GAA6B,EAA7B;AACA8F,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,KARD;AASD,GAVD;;AAWA,MAAMs0B,cAAc,GAAG,SAAjBA,cAAiB,CAACh0B,IAAD,EAAOX,IAAP,EAAaO,OAAb,EAAsB20B,IAAtB,EAA+B;AACpDv0B,IAAAA,IAAI,CAACk0B,QAAL,GAAgB,UAAAp2B,CAAC,EAAI;AACnBA,MAAAA,CAAC,CAACq2B,cAAF;AACA10B,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCL,IAAnC;AAEA,UAAMm1B,SAAS,GAAG;AAChB30B,QAAAA,KAAK,EAAEG,IAAI,CAACK,aAAL,CAAmB,QAAnB,CADS;AAEhBJ,QAAAA,WAAW,EAAED,IAAI,CAACK,aAAL,CAAmB,cAAnB,CAFG;AAGhBN,QAAAA,QAAQ,EAAEC,IAAI,CAACK,aAAL,CAAmB,WAAnB,CAHM;AAIhByB,QAAAA,IAAI,EAAE9B,IAAI,CAACK,aAAL,CAAmB,OAAnB,CAJU;AAKhBT,QAAAA,OAAO,EAAEI,IAAI,CAACK,aAAL,CAAmB,UAAnB;AALO,OAAlB;AAJmB,UAWXR,KAXW,GAW4B20B,SAX5B,CAWX30B,KAXW;AAAA,UAWJI,WAXI,GAW4Bu0B,SAX5B,CAWJv0B,WAXI;AAAA,UAWSF,QAXT,GAW4By0B,SAX5B,CAWSz0B,QAXT;AAAA,UAWmB+B,IAXnB,GAW4B0yB,SAX5B,CAWmB1yB,IAXnB;;AAanB,UAAIyyB,IAAI,KAAK,KAAb,EAAoB;AAClB90B,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,OAFD,MAEO,IAAI60B,IAAI,KAAK,MAAb,EAAqB;AAC1Bl1B,QAAAA,IAAI,CAACo1B,IAAL,CAAU50B,KAAK,CAAClG,KAAhB,EAAuBsG,WAAW,CAACtG,KAAnC,EAA0CoG,QAAQ,CAACpG,KAAnD,EAA0DmI,IAAI,CAACnI,KAA/D;AACD;;AAEDk5B,MAAAA,MAAM,CAACS,qBAAP,CAA6B1zB,OAA7B;AACD,KApBD;AAqBD,GAtBD;;AAwBA,SAAO;AACLq0B,IAAAA,iBAAiB,EAAjBA,iBADK;AAELD,IAAAA,cAAc,EAAdA;AAFK,GAAP;AAID,CAxCgB,EAAjB;;AA0CAD,QAAQ,CAACE,iBAAT;;AAEA,IAAMS,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAIl1B,QAAQ,GAAG,EAAf;;AACA,MAAMm1B,YAAY,GAAG,SAAfA,YAAe,CAAA/0B,OAAO,EAAI;AAC9BJ,IAAAA,QAAQ,CAAC7I,IAAT,CAAciJ,OAAd;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,QAA5B;AACD,GAHD;;AAIA,MAAMo1B,aAAa,GAAG,SAAhBA,aAAgB,CAAAh1B,OAAO,EAAI;AAC/BJ,IAAAA,QAAQ,GAAGA,QAAQ,CAACoqB,MAAT,CAAgB,UAAAiL,IAAI;AAAA,aAAIA,IAAI,CAACv1B,EAAL,KAAYM,OAAO,CAACN,EAAxB;AAAA,KAApB,CAAX;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,QAA5B;AACD,GAHD;;AAIA,SAAO;AACLm1B,IAAAA,YAAY,EAAZA,YADK;AAELC,IAAAA,aAAa,EAAbA,aAFK;AAGLp1B,IAAAA,QAAQ,EAARA;AAHK,GAAP;AAKD,CAfD;;AAiBA,IAAM2zB,OAAO,GAAGuB,IAAI,EAApB;;IAEML;AACJ,mBAAYx0B,KAAZ,EAAmB;AAAA;;AACjB,SAAKg0B,KAAL,GAAa,EAAb;AACA,SAAKh0B,KAAL,GAAaA,KAAb;AACA,SAAKP,EAAL,GAAU,eAAV;AACA,SAAKw1B,QAAL,GAAgB,KAAhB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACD;;;;6BACQ;AACPt1B,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,IAArB;AACAyzB,MAAAA,OAAO,CAACwB,YAAR,CAAqB,IAArB;AACD;;;4BACOt1B,MAAM;AACZ,WAAKw0B,KAAL,CAAWl9B,IAAX,CAAgB0I,IAAhB;AACD;;;+BACUA,MAAM;AACf,WAAKw0B,KAAL,GAAa,KAAKA,KAAL,CAAWjK,MAAX,CAAkB,UAAAiL,IAAI;AAAA,eAAIA,IAAI,CAACv1B,EAAL,KAAYD,IAAI,CAACC,EAArB;AAAA,OAAtB,CAAb;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKm0B,KAA9B;AACD;;;;;;IAGGmB;AACJ,gBAAYn1B,KAAZ,EAAmBI,WAAnB,EAAgCF,QAAhC,EAA0CG,OAA1C,EAAmD;AAAA;;AACjD,SAAKL,KAAL,GAAaA,KAAb;AACA,SAAKI,WAAL,GAAmBA,WAAnB;AACA,SAAKF,QAAL,GAAgBA,QAAhB;AACA,SAAKT,EAAL,GAAU,eAAV;AACA,SAAK21B,SAAL,GAAiB,KAAjB;AACA,SAAK/0B,OAAL,GAAeA,OAAO,IAAI,qBAAO,IAAI9H,IAAJ,EAAP,EAAmB,YAAnB,CAA1B;AACD;;;;yBAEIyH,OAAOI,aAAaF,UAAUG,SAAS;AAC1CL,MAAAA,KAAK,KAAK,KAAKA,KAAL,GAAaA,KAAlB,CAAL;AACAI,MAAAA,WAAW,KAAK,KAAKA,WAAL,GAAmBA,WAAxB,CAAX;AACAF,MAAAA,QAAQ,KAAK,KAAKA,QAAL,GAAgBA,QAArB,CAAR;AACAG,MAAAA,OAAO,KAAK,KAAKA,OAAL,GAAeA,OAApB,CAAP;AACD;;;qCACgB;AACf,WAAK+0B,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;;;;;;AAGH,IAAMC,SAAS,GAAG,IAAIb,OAAJ,CAAY,OAAZ,CAAlB;AACAa,SAAS,CAACZ,MAAV;AACAY,SAAS,CAACC,OAAV,CAAkB,IAAIH,IAAJ,CAAS,SAAT,EAAoB,aAApB,EAAmC,WAAnC,CAAlB;AACAE,SAAS,CAACC,OAAV,CAAkB,IAAIH,IAAJ,CAAS,SAAT,EAAoB,UAApB,EAAgC,MAAhC,CAAlB;AAEA,IAAMI,UAAU,GAAG,IAAIf,OAAJ,CAAY,QAAZ,CAAnB;AACAe,UAAU,CAACd,MAAX;AACAc,UAAU,CAACD,OAAX,CAAmB,IAAIH,IAAJ,CAAS,UAAT,EAAqB,aAArB,EAAoC,QAApC,CAAnB;AACAI,UAAU,CAACD,OAAX,CAAmB,IAAIH,IAAJ,CAAS,UAAT,EAAqB,aAArB,EAAoC,WAApC,CAAnB,GAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA7C,iBAAOC,OAAP,CAAe9xB,OAAf,GAAyB,YAAM;AAC7BuyB,EAAAA,MAAM,CAACG,UAAP,CAAkBV,kBAAQA,OAA1B,EAAmC,QAAnC;AACAO,EAAAA,MAAM,CAACG,UAAP,CAAkBN,oBAAUA,SAA5B,EAAuC,QAAvC;AACD,CAHD;;AAKAG,MAAM,CAACI,mBAAP;;;AGjNA,IAAI2D,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGF,MAAM,CAACf,MAAP,CAAckB,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BF,EAAAA,SAAS,CAAC55B,IAAV,CAAe,IAAf,EAAqB85B,UAArB;AACA,OAAKC,GAAL,GAAW;AACT93B,IAAAA,IAAI,EAAEy3B,MAAM,CAACf,MAAP,CAAcqB,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsBvgC,IAAtB,CAA2B0gC,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTC,IAAAA,OAAO,EAAE,UAAUD,EAAV,EAAc;AACrB,WAAKF,iBAAL,CAAuBxgC,IAAvB,CAA4B0gC,EAA5B;AACD;AATQ,GAAX;AAYAV,EAAAA,MAAM,CAACf,MAAP,CAAcqB,OAAd,GAAwB,IAAxB;AACD;;AAEDN,MAAM,CAACf,MAAP,CAAckB,MAAd,GAAuBA,MAAvB;AACA,IAAIS,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGd,MAAM,CAACf,MAAP,CAAc6B,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASC,KAAT,EAAgB;AAC7BV,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIt4B,IAAI,GAAGg5B,IAAI,CAACv/B,KAAL,CAAWs/B,KAAK,CAAC/4B,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACq1B,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAI4D,OAAO,GAAG,KAAd;AACAj5B,MAAAA,IAAI,CAACk5B,MAAL,CAAYt5B,OAAZ,CAAoB,UAASu5B,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAAC/4B,EAA7B,CAA9B;;AACA,cAAIi5B,SAAJ,EAAe;AACbJ,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAIj5B,IAAI,CAACk5B,MAAL,CAAYO,KAAZ,CAAkB,UAASN,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAAC9D,IAAN,KAAe,KAAf,IAAwB8D,KAAK,CAACO,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIV,OAAJ,EAAa;AACX14B,QAAAA,OAAO,CAACq5B,KAAR;AAEA55B,QAAAA,IAAI,CAACk5B,MAAL,CAAYt5B,OAAZ,CAAoB,UAAUu5B,KAAV,EAAiB;AACnCU,UAAAA,QAAQ,CAACN,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAb,QAAAA,cAAc,CAAC14B,OAAf,CAAuB,UAAUlG,CAAV,EAAa;AAClCogC,UAAAA,YAAY,CAACpgC,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAIi/B,QAAQ,CAACoB,MAAb,EAAqB;AAAE;AAC5BpB,QAAAA,QAAQ,CAACoB,MAAT;AACD;AACF;;AAED,QAAI/5B,IAAI,CAACq1B,IAAL,KAAc,QAAlB,EAA4B;AAC1BwD,MAAAA,EAAE,CAACmB,KAAH;;AACAnB,MAAAA,EAAE,CAACoB,OAAH,GAAa,YAAY;AACvBtB,QAAAA,QAAQ,CAACoB,MAAT;AACD,OAFD;AAGD;;AAED,QAAI/5B,IAAI,CAACq1B,IAAL,KAAc,gBAAlB,EAAoC;AAClC90B,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEA05B,MAAAA,kBAAkB;AACnB;;AAED,QAAIl6B,IAAI,CAACq1B,IAAL,KAAc,OAAlB,EAA2B;AACzB90B,MAAAA,OAAO,CAAC45B,KAAR,CAAc,kBAAkBn6B,IAAI,CAACm6B,KAAL,CAAWC,OAA7B,GAAuC,IAAvC,GAA8Cp6B,IAAI,CAACm6B,KAAL,CAAW33B,KAAvE;AAEA03B,MAAAA,kBAAkB;AAElB,UAAIG,OAAO,GAAGC,kBAAkB,CAACt6B,IAAD,CAAhC;AACAb,MAAAA,QAAQ,CAACO,IAAT,CAAcI,WAAd,CAA0Bu6B,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASH,kBAAT,GAA8B;AAC5B,MAAIG,OAAO,GAAGl7B,QAAQ,CAACo7B,cAAT,CAAwB7C,UAAxB,CAAd;;AACA,MAAI2C,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACxG,MAAR;AACD;AACF;;AAED,SAASyG,kBAAT,CAA4Bt6B,IAA5B,EAAkC;AAChC,MAAIq6B,OAAO,GAAGl7B,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAi7B,EAAAA,OAAO,CAACj6B,EAAR,GAAas3B,UAAb,CAFgC,CAIhC;;AACA,MAAI0C,OAAO,GAAGj7B,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIo7B,UAAU,GAAGr7B,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;AACAg7B,EAAAA,OAAO,CAACK,SAAR,GAAoBz6B,IAAI,CAACm6B,KAAL,CAAWC,OAA/B;AACAI,EAAAA,UAAU,CAACC,SAAX,GAAuBz6B,IAAI,CAACm6B,KAAL,CAAW33B,KAAlC;AAEA63B,EAAAA,OAAO,CAACrG,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EoG,OAAO,CAACpG,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYwG,UAAU,CAACxG,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOqG,OAAP;AAED;;AAED,SAASK,UAAT,CAAoBhE,MAApB,EAA4Bt2B,EAA5B,EAAgC;AAC9B,MAAIu6B,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIxf,CAAJ,EAAOtf,CAAP,EAAU++B,GAAV;;AAEA,OAAKzf,CAAL,IAAUuf,OAAV,EAAmB;AACjB,SAAK7+B,CAAL,IAAU6+B,OAAO,CAACvf,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvByf,MAAAA,GAAG,GAAGF,OAAO,CAACvf,CAAD,CAAP,CAAW,CAAX,EAActf,CAAd,CAAN;;AACA,UAAI++B,GAAG,KAAKz6B,EAAR,IAAexH,KAAK,CAACiF,OAAN,CAAcg9B,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAAC7iC,MAAJ,GAAa,CAAd,CAAH,KAAwBoI,EAAjE,EAAsE;AACpEw6B,QAAAA,OAAO,CAACnjC,IAAR,CAAa2jB,CAAb;AACD;AACF;AACF;;AAED,MAAIsb,MAAM,CAAC6B,MAAX,EAAmB;AACjBqC,IAAAA,OAAO,GAAGA,OAAO,CAAC5d,MAAR,CAAe0d,UAAU,CAAChE,MAAM,CAAC6B,MAAR,EAAgBn4B,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAOw6B,OAAP;AACD;;AAED,SAASf,QAAT,CAAkBnD,MAAlB,EAA0ByC,KAA1B,EAAiC;AAC/B,MAAIwB,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACxB,KAAK,CAAC/4B,EAAP,CAAP,IAAqB,CAACs2B,MAAM,CAAC6B,MAAjC,EAAyC;AACvC,QAAIJ,EAAE,GAAG,IAAI2C,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6C3B,KAAK,CAACO,SAAN,CAAgBC,EAA7D,CAAT;AACAR,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACuB,OAAO,CAACxB,KAAK,CAAC/4B,EAAP,CAAtB;AACAu6B,IAAAA,OAAO,CAACxB,KAAK,CAAC/4B,EAAP,CAAP,GAAoB,CAAC+3B,EAAD,EAAKgB,KAAK,CAAC4B,IAAX,CAApB;AACD,GAJD,MAIO,IAAIrE,MAAM,CAAC6B,MAAX,EAAmB;AACxBsB,IAAAA,QAAQ,CAACnD,MAAM,CAAC6B,MAAR,EAAgBY,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwB5C,MAAxB,EAAgCt2B,EAAhC,EAAoC;AAClC,MAAIu6B,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAACv6B,EAAD,CAAR,IAAgBs2B,MAAM,CAAC6B,MAA3B,EAAmC;AACjC,WAAOe,cAAc,CAAC5C,MAAM,CAAC6B,MAAR,EAAgBn4B,EAAhB,CAArB;AACD;;AAED,MAAIi4B,aAAa,CAACj4B,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDi4B,EAAAA,aAAa,CAACj4B,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAI46B,MAAM,GAAGtE,MAAM,CAACuE,KAAP,CAAa76B,EAAb,CAAb;AAEAk4B,EAAAA,cAAc,CAAC7gC,IAAf,CAAoB,CAACi/B,MAAD,EAASt2B,EAAT,CAApB;;AAEA,MAAI46B,MAAM,IAAIA,MAAM,CAAClD,GAAjB,IAAwBkD,MAAM,CAAClD,GAAP,CAAWE,gBAAX,CAA4BhgC,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAO0iC,UAAU,CAACnB,MAAM,CAACC,aAAR,EAAuBp5B,EAAvB,CAAV,CAAqC86B,IAArC,CAA0C,UAAU96B,EAAV,EAAc;AAC7D,WAAOk5B,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBp5B,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAAS05B,YAAT,CAAsBpD,MAAtB,EAA8Bt2B,EAA9B,EAAkC;AAChC,MAAI46B,MAAM,GAAGtE,MAAM,CAACuE,KAAP,CAAa76B,EAAb,CAAb;AACAs2B,EAAAA,MAAM,CAACqB,OAAP,GAAiB,EAAjB;;AACA,MAAIiD,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAAClD,GAAP,CAAW93B,IAAX,GAAkB02B,MAAM,CAACqB,OAAzB;AACD;;AAED,MAAIiD,MAAM,IAAIA,MAAM,CAAClD,GAAjB,IAAwBkD,MAAM,CAAClD,GAAP,CAAWG,iBAAX,CAA6BjgC,MAAzD,EAAiE;AAC/DgjC,IAAAA,MAAM,CAAClD,GAAP,CAAWG,iBAAX,CAA6Br4B,OAA7B,CAAqC,UAAUu7B,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAACzE,MAAM,CAACqB,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAOrB,MAAM,CAACuE,KAAP,CAAa76B,EAAb,CAAP;AACAs2B,EAAAA,MAAM,CAACt2B,EAAD,CAAN;AAEA46B,EAAAA,MAAM,GAAGtE,MAAM,CAACuE,KAAP,CAAa76B,EAAb,CAAT;;AACA,MAAI46B,MAAM,IAAIA,MAAM,CAAClD,GAAjB,IAAwBkD,MAAM,CAAClD,GAAP,CAAWE,gBAAX,CAA4BhgC,MAAxD,EAAgE;AAC9DgjC,IAAAA,MAAM,CAAClD,GAAP,CAAWE,gBAAX,CAA4Bp4B,OAA5B,CAAoC,UAAUu7B,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","export const stringToHTML = (str, elementType) => {\n  const fragment = elementType\n    ? document.createElement(elementType)\n    : document.createDocumentFragment()\n  const parser = new DOMParser()\n  const doc = parser.parseFromString(str, 'text/html')\n  ;[...doc.body.children].forEach(element => fragment.appendChild(element))\n  return fragment\n}\n","import { stringToHTML } from '../helpers/stringToHTML'\n\nexport const taskForm = data => {\n  const { add, hide, task, id, currentProject, projects } = data\n  console.log({ projects })\n  let projectSelection = ``\n  projects.forEach(project => {\n    projectSelection += `<option value=\"${project.title}\" ${\n      currentProject.title === project.title && 'selected=\"selected\"'\n    }>${project.title}</option>`\n  })\n\n  let prioritySelection = ``\n  ;['None', 'Important', 'Urgent'].forEach(priority => {\n    prioritySelection += `<option value=\"${priority}\" ${\n      task.priority === priority && `selected=\"selected\"`\n    }>${priority}</option>`\n  })\n\n  const form = stringToHTML(` <div\n    class=\"add-task-form ${hide && 'hide'}\"\n    id=\"addTaskFormContainer${id}\"\n  >\n    <form id=\"addTaskForm\" autocomplete=\"off\" data-id=\"${id}\">\n      <div class=\"container\">\n        <div class=\"title\">\n          <label for=\"title\">Title: </label>\n          <input\n            name=\"title\"\n            id=\"title\"\n            placeholder=\"Enter the title\"\n            value=\"${task.title}\"\n            required\n          />\n        </div>\n        <div class=\"description\">\n          <label for=\"description\">Description: </label>\n          <input\n            name=\"description\"\n            id=\"description\"\n            placeholder=\"Enter the description\"\n            value=\"${task.description}\"\n          />\n        </div>\n        <div class=\"sub-options\">\n          <div class=\"priority\">\n            <label for=\"priority\">Priority: </label>\n            <select name=\"priority\" id=\"priority\" class=\"priority-select\" selected=\"${\n              task.priority\n            }\">\n            ${prioritySelection}\n            </select>\n          </div>\n          <div class=\"date\">\n            <label for=\"date\">Pick a date: </label>\n            <input type=\"date\" name=\"date\" id=\"date\" value=\"${task.dueDate}\"/>\n          </div>\n          <div class=\"project-selection\">\n            <label for=\"project\">Project: </label>\n            <select name=\"project\" id=\"project\">${projectSelection}</select>\n          </div>\n        </div>\n      </div>\n      <button class=\"add-task-button\" type=\"submit\">\n        ${add ? 'Add Task' : 'Edit Task'}\n      </button>\n      <button type=\"button\" class=\"cancel\" id=\"cancelAddTask${id}\">Cancel</button>\n    </form>\n  </div>`)\n\n  return form\n}\n","import { stringToHTML } from '../helpers/stringToHTML'\nimport { taskForm } from './taskForm'\n\nexport const taskItem = (data, DOM, currentProject, projects) => {\n  const task = data\n  const element = stringToHTML(\n    ` <div><h3>${task.title}</h3><button id=\"toggleCompleted\">Toggle</button></div>`,\n    'li'\n  )\n  element.appendChild(\n    taskForm({\n      add: false,\n      hide: true,\n      task,\n      id: data.id,\n      currentProject,\n      projects,\n    })\n  )\n  element.querySelector('h3').onclick = () => {\n    DOM.unhide(element.querySelector(`#addTaskFormContainer${data.id}`), 'hide')\n  }\n  element.querySelector('.cancel').onclick = e => {\n    DOM.hide(element.querySelector(`#addTaskFormContainer${data.id}`), 'hide')\n  }\n  element.querySelector('#toggleCompleted').onclick = () => {\n    task.toggleComplete()\n    element.classList.toggle('completed')\n  }\n  return element\n}\n","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import addDays from '../addDays/index.js';\nimport addMonths from '../addMonths/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added       |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * var result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\n\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWeekend\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * var result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\n\nexport default function isWeekend(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day === 0 || day === 6;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSunday\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * var result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\n\nexport default function isSunday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 0;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSaturday\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * var result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\n\nexport default function isSaturday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 6;\n}","import isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport isSunday from '../isSunday/index.js';\nimport isSaturday from '../isSaturday/index.js';\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * var result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function addBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var startedOnWeekend = isWeekend(date);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  var fullWeeks = toInteger(amount / 5);\n  date.setDate(date.getDate() + fullWeeks * 7); // Get remaining days not part of a full week\n\n  var restDays = Math.abs(amount % 5); // Loops over remaining days\n\n  while (restDays > 0) {\n    date.setDate(date.getDate() + sign);\n    if (!isWeekend(date)) restDays -= 1;\n  } // If the date is a weekend day and we reduce a dividable of\n  // 5 from it, we land on a weekend date.\n  // To counter this, we add days accordingly to land on the next business day\n\n\n  if (startedOnWeekend && isWeekend(date) && amount !== 0) {\n    // If we're reducing days, we want to add days until we land on a weekday\n    // If we're adding days we want to reduce days until we land on a weekday\n    if (isSaturday(date)) date.setDate(date.getDate() + (sign < 0 ? 2 : -1));\n    if (isSunday(date)) date.setDate(date.getDate() + (sign < 0 ? 1 : -2));\n  } // Restore hours to avoid DST lag\n\n\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\n\nexport default function addHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return startOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import toDate from '../toDate/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getISOYear` to `getISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\n\nexport default function getISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  return date;\n}","var MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `setISOYear` to `setISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeekYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * var result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\n\nexport default function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeekYear = toInteger(dirtyISOWeekYear);\n  var diff = differenceInCalendarDays(date, startOfISOWeekYear(date));\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  date = startOfISOWeekYear(fourthOfJanuary);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport getISOWeekYear from '../getISOWeekYear/index.js';\nimport setISOWeekYear from '../setISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `addISOYears` to `addISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * var result = addISOWeekYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\n\nexport default function addISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return setISOWeekYear(dirtyDate, getISOWeekYear(dirtyDate) + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * var result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\n\nexport default function addQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var months = amount * 3;\n  return addMonths(dirtyDate, months);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\n\nexport default function addSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * 1000);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * var result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\n\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name areIntervalsOverlapping\n * @category Interval Helpers\n * @summary Is the given time interval overlapping with another time interval?\n *\n * @description\n * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   areRangesOverlapping(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   areIntervalsOverlapping(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/types/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.inclusive=false] - whether the comparison is inclusive or not\n * @returns {Boolean} whether the time intervals are overlapping\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> false\n *\n * @example\n * // For adjacent time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }\n * )\n * //=> false\n *\n * @example\n * // Using the inclusive option:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }\n * )\n * //=> false\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },\n *   { inclusive: true }\n * )\n * //=> true\n */\n\nexport default function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  if (options.inclusive) {\n    return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;\n  }\n\n  return leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name closestIndexTo\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestIndexTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Number} an index of the date closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * var dateToCompare = new Date(2015, 8, 6)\n * var datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * var result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\n\nexport default function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return NaN;\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate, index) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = NaN;\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = index;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name closestTo\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Date} the date from the array closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * var dateToCompare = new Date(2015, 8, 6)\n * var result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\n\nexport default function closestTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return new Date(NaN);\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = new Date(NaN);\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = currentDate;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareDesc\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * var result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\n\nexport default function compareDesc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff > 0) {\n    return -1;\n  } else if (diff < 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import isValid from '../isValid/index.js';\nimport isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport addDays from '../addDays/index.js';\nimport isSameDay from '../isSameDay/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInBusinessDays\n * @category Day Helpers\n * @summary Get the number of business days between the given dates.\n *\n * @description\n * Get the number of business day periods between the given dates.\n * Business days being days that arent in the weekend.\n * Like `differenceInCalendarDays`, the function removes the times from\n * the dates before calculating the difference.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of business days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many business days are between\n * // 10 January 2014 and 20 July 2014?\n * var result = differenceInBusinessDays(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 0, 10)\n * )\n * //=> 136\n */\n\nexport default function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  if (!isValid(dateLeft) || !isValid(dateRight)) return new Date(NaN);\n  var calendarDifference = differenceInCalendarDays(dateLeft, dateRight);\n  var sign = calendarDifference < 0 ? -1 : 1;\n  var weeks = toInteger(calendarDifference / 7);\n  var result = weeks * 5;\n  dateRight = addDays(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n\n  while (!isSameDay(dateLeft, dateRight)) {\n    // sign is used to account for both negative and positive differences\n    result += isWeekend(dateRight) ? 0 : sign;\n    dateRight = addDays(dateRight, sign);\n  }\n\n  return result === 0 ? 0 : result;\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * var result = differenceInCalendarISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return getISOWeekYear(dirtyDateLeft) - getISOWeekYear(dirtyDateRight);\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * var result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft);\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight);\n  var timestampLeft = startOfISOWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\n  var timestampRight = startOfISOWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getQuarter\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which quarter is 2 July 2014?\n * var result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\n\nexport default function getQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = Math.floor(date.getMonth() / 3) + 1;\n  return quarter;\n}","import getQuarter from '../getQuarter/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarQuarters\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight);\n  return yearDiff * 4 + quarterDiff;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarWeeks\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   { weekStartsOn: 1 }\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions);\n  var timestampLeft = startOfWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekLeft);\n  var timestampRight = startOfWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() - dateRight.getFullYear();\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * var result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareLocalAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addISOWeekYears from '../addISOWeekYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `subISOYears` to `subISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * var result = subISOWeekYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\n\nexport default function subISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addISOWeekYears(dirtyDate, -amount);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarISOWeekYears from '../differenceInCalendarISOWeekYears/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport subISOWeekYears from '../subISOWeekYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * var result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\n\nexport default function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarISOWeekYears(dateLeft, dateRight));\n  dateLeft = subISOWeekYears(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastISOWeekYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMonths from '../differenceInMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\n\nexport default function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInDays from '../differenceInDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between two dates. Fractional weeks are\n * truncated towards zero.\n *\n * One \"full week\" is the distance between a local time in one day to the same\n * local time 7 days earlier or later. A full week can sometimes be less than\n * or more than 7*24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 7*24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n *\n * // How many full weeks are between\n * // 1 March 2020 0:00 and 6 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 8 weeks (54 days),\n * // even if DST starts and the period has\n * // only 54*24-1 hours.\n * var result = differenceInWeeks(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 6)\n * )\n * //=> 8\n */\n\nexport default function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarYears from '../differenceInCalendarYears/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\n\nexport default function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n\n  dateLeft.setFullYear('1584');\n  dateRight.setFullYear('1584'); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import addHours from '../addHours/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachHourOfInterval\n * @category Interval Helpers\n * @summary Return the array of hours within the specified time interval.\n *\n * @description\n * Return the array of hours within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of hours from the hour of the interval start to the hour of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each hour between 6 October 2014, 12:00 and 10 October 2014, 15:00\n * var result = eachHourOfInterval({\n *   start: new Date(2014, 9, 6, 12),\n *   end: new Date(2014, 9, 6, 15)\n * })\n * //=> [\n * //   Mon Oct 06 2014 12:00:00,\n * //   Mon Oct 06 2014 13:00:00,\n * //   Mon Oct 06 2014 14:00:00,\n * //   Mon Oct 06 2014 15:00:00\n * // ]\n */\n\nexport default function eachHourOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var startTime = startDate.getTime();\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setMinutes(0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate = addHours(currentDate, step);\n  }\n\n  return dates;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachMonthOfInterval\n * @category Interval Helpers\n * @summary Return the array of months within the specified time interval.\n *\n * @description\n * Return the array of months within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of months from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each month between 6 February 2014 and 10 August 2014:\n * var result = eachMonthOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Sat Feb 01 2014 00:00:00,\n * //   Sat Mar 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Thu May 01 2014 00:00:00,\n * //   Sun Jun 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * //   Fri Aug 01 2014 00:00:00\n * // ]\n */\n\nexport default function eachMonthOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setDate(1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setMonth(currentDate.getMonth() + 1);\n  }\n\n  return dates;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfQuarter\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\n\nexport default function startOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3;\n  date.setMonth(month, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import addQuarters from '../addQuarters/index.js';\nimport startOfQuarter from '../startOfQuarter/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachQuarterOfInterval\n * @category Interval Helpers\n * @summary Return the array of quarters within the specified time interval.\n *\n * @description\n * Return the array of quarters within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of quarters from the quarter of the interval start to the quarter of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each quarter within interval 6 February 2014 - 10 August 2014:\n * var result = eachQuarterOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * // ]\n */\n\nexport default function eachQuarterOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateQuarter = startOfQuarter(startDate);\n  var endDateQuarter = startOfQuarter(endDate);\n  endTime = endDateQuarter.getTime();\n  var quarters = [];\n  var currentQuarter = startDateQuarter;\n\n  while (currentQuarter.getTime() <= endTime) {\n    quarters.push(toDate(currentQuarter));\n    currentQuarter = addQuarters(currentQuarter, 1);\n  }\n\n  return quarters;\n}","import addWeeks from '../addWeeks/index.js';\nimport startOfWeek from '../startOfWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * var result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\n\nexport default function eachWeekOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateWeek = startOfWeek(startDate, options);\n  var endDateWeek = startOfWeek(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n  endTime = endDateWeek.getTime();\n  var weeks = [];\n  var currentWeek = startDateWeek;\n\n  while (currentWeek.getTime() <= endTime) {\n    currentWeek.setHours(0);\n    weeks.push(toDate(currentWeek));\n    currentWeek = addWeeks(currentWeek, 1);\n    currentWeek.setHours(15);\n  }\n\n  return weeks;\n}","import eachDayOfInterval from '../eachDayOfInterval/index.js';\nimport isSunday from '../isSunday/index.js';\nimport isWeekend from '../isWeekend/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @param {Interval} interval - the given interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * var result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfInterval(interval) {\n  requiredArgs(1, arguments);\n  var dateInterval = eachDayOfInterval(interval);\n  var weekends = [];\n  var index = 0;\n\n  while (index < dateInterval.length) {\n    var date = dateInterval[index++];\n\n    if (isWeekend(date)) {\n      weekends.push(date);\n      if (isSunday(date)) index = index + 5;\n    }\n  }\n\n  return weekends;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import eachWeekendOfInterval from '../eachWeekendOfInterval/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport endOfMonth from '../endOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfMonth\n * @category Month Helpers\n * @summary List all the Saturdays and Sundays in the given month.\n *\n * @description\n * Get all the Saturdays and Sundays in the given month.\n *\n * @param {Date|Number} date - the given month\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the given month\n * var result = eachWeekendOfMonth(new Date(2022, 1, 1))\n * //=> [\n * //   Sat Feb 05 2022 00:00:00,\n * //   Sun Feb 06 2022 00:00:00,\n * //   Sat Feb 12 2022 00:00:00,\n * //   Sun Feb 13 2022 00:00:00,\n * //   Sat Feb 19 2022 00:00:00,\n * //   Sun Feb 20 2022 00:00:00,\n * //   Sat Feb 26 2022 00:00:00,\n * //   Sun Feb 27 2022 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfMonth(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfMonth(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\n\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import eachWeekendOfInterval from '../eachWeekendOfInterval/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport endOfYear from '../endOfYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @param {Date|Number} date - the given year\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * var result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n * //   Sat Jan 03 2020 00:00:00,\n * //   Sun Jan 04 2020 00:00:00,\n * //   ...\n * //   Sun Dec 27 2020 00:00:00\n * // ]\n * ]\n */\n\nexport default function eachWeekendOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfYear(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfYear(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachYearOfInterval\n * @category Interval Helpers\n * @summary Return the array of yearly timestamps within the specified time interval.\n *\n * @description\n * Return the array of yearly timestamps within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each year between 6 February 2014 and 10 August 2017:\n * var result = eachYearOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2017, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Thu Jan 01 2015 00:00:00,\n * //   Fri Jan 01 2016 00:00:00,\n * //   Sun Jan 01 2017 00:00:00\n * // ]\n */\n\nexport default function eachYearOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setMonth(0, 1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setFullYear(currentDate.getFullYear() + 1);\n  }\n\n  return dates;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDecade\n * @category Decade Helpers\n * @summary Return the end of a decade for the given date.\n *\n * @description\n * Return the end of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a decade\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The end of a decade for 12 May 1984 00:00:00:\n * var result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))\n * //=> Dec 31 1989 23:59:59.999\n */\n\nexport default function endOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 11, 31);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfHour\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * var result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\n\nexport default function endOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import endOfWeek from '../endOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return endOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * var result = endOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\n\nexport default function endOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  date.setMilliseconds(date.getMilliseconds() - 1);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMinute\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\n\nexport default function endOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfQuarter\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfSecond\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\n\nexport default function endOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(999);\n  return date;\n}","import endOfDay from '../endOfDay/index.js';\n/**\n * @name endOfToday\n * @category Day Helpers\n * @summary Return the end of today.\n * @pure false\n *\n * @description\n * Return the end of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\n\nexport default function endOfToday() {\n  return endOfDay(Date.now());\n}","/**\n * @name endOfTomorrow\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n * @pure false\n *\n * @description\n * Return the end of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nexport default function endOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","/**\n * @name endOfYesterday\n * @category Day Helpers\n * @summary Return the end of yesterday.\n * @pure false\n *\n * @description\n * Return the end of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nexport default function endOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport toDate from '../toDate/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport toDate from '../toDate/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_YEAR = 525600;\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(2015, 0, 2),\n *     new Date(2014, 6, 2)\n *   ) //=> '6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(2014, 6, 2),\n *     new Date(2015, 0, 2)\n *   ) //=> '6 months'\n *   ```\n *\n * - `partialMethod` option is renamed to `roundingMethod`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { partialMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { roundingMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *   ```\n *\n * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n *\n * - `unit` option now accepts one of the strings:\n *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { unit: 'm' }\n *   )\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { unit: 'minute' }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * var result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * var result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * var result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);\n  var roundingMethodFn;\n\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = roundingMethodFn((seconds - offsetInSeconds) / 60);\n  var unit;\n\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (minutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (minutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(options.unit);\n  } // 0 up to 60 seconds\n\n\n  if (unit === 'second') {\n    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(minutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import distanceInWords from '../formatDistance/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import distanceInStrictWords from '../formatDistanceStrict/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInStrictWords(dirtyDate, Date.now(), dirtyOptions);\n}","import defaultLocale from '../locale/en-US/index.js';\nvar defaultFormat = ['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'];\n/**\n * @name formatDuration\n * @category Common Helpers\n * @summary Formats a duration in human-readable format\n *\n * @description\n * Return human-readable duration string i.e. \"9 months 2 days\"\n *\n * @param {Duration} duration - the duration to format\n * @param {Object} [options] - an object with options.\n\n * @param {string[]} [options.format=['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']] - the array of units to format\n * @param {boolean} [options.zero=false] - should be zeros be included in the output?\n * @param {string} [options.delimiter=' '] - delimiter string\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {string} the formatted date string\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Format full duration\n * formatDuration({\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds\n *\n * @example\n * // Format partial duration\n * formatDuration({ months: 9, days: 2 })\n * //=> '9 months 2 days'\n *\n * @example\n * // Customize the format\n * formatDuration(\n *   {\n *     years: 2,\n *     months: 9,\n *     weeks: 1,\n *     days: 7,\n *     hours: 5,\n *     minutes: 9,\n *     seconds: 30\n *   },\n *   { format: ['months', 'weeks'] }\n * ) === '9 months 1 week'\n *\n * @example\n * // Customize the zeros presence\n * formatDuration({ years: 0, months: 9 })\n * //=> '9 months'\n * formatDuration({ years: 0, months: 9 }, null, { zero: true })\n * //=> '0 years 9 months'\n *\n * @example\n * // Customize the delimiter\n * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })\n * //=> '2 years, 9 months, 3 weeks'\n */\n\nexport default function formatDuration(duration) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var format = options.format || defaultFormat;\n  var locale = options.locale || defaultLocale;\n  var zero = options.zero || false;\n  var delimiter = options.delimiter || ' ';\n  var result = format.reduce(function (acc, unit) {\n    var token = \"x\".concat(unit.replace(/(^.)/, function (m) {\n      return m.toUpperCase();\n    }));\n    var addChunk = typeof duration[unit] === 'number' && (zero || duration[unit]);\n    return addChunk ? acc.concat(locale.formatDistance(token, duration[unit])) : acc;\n  }, []).join(delimiter);\n  return result;\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with time zone, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\n\nexport default function formatISO(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'\n\n    var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n\n    var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n\n  return result;\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\n/**\n * @name formatISO9075\n * @category Common Helpers\n * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).\n *\n * @description\n * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18 19:00:52'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075, short format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918 190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, date only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, time only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52'\n */\n\nexport default function formatISO9075(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space\n\n    var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);\n  }\n\n  return result;\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatISODuration\n * @category Common Helpers\n * @summary Format a duration object according as ISO 8601 duration string\n *\n * @description\n * Format a duration object according to the ISO 8601 duration standard (https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm)\n *\n * @param {Duration} duration - the duration to format\n *\n * @returns {String} The ISO 8601 duration string\n * @throws {TypeError} Requires 1 argument\n * @throws {Error} Argument must be an object\n *\n * @example\n * // Format the given duration as ISO 8601 string\n * formatISODuration({\n *   years: 39,\n *   months: 2,\n *   days: 20,\n *   hours: 7,\n *   minutes: 5,\n *   seconds: 0\n * })\n * //=> 'P39Y2M20DT0H0M0S'\n */\n\nexport default function formatISODuration(duration) {\n  requiredArgs(1, arguments);\n  if (typeof duration !== 'object') throw new Error('Duration must be an object');\n  var _duration$years = duration.years,\n      years = _duration$years === void 0 ? 0 : _duration$years,\n      _duration$months = duration.months,\n      months = _duration$months === void 0 ? 0 : _duration$months,\n      _duration$days = duration.days,\n      days = _duration$days === void 0 ? 0 : _duration$days,\n      _duration$hours = duration.hours,\n      hours = _duration$hours === void 0 ? 0 : _duration$hours,\n      _duration$minutes = duration.minutes,\n      minutes = _duration$minutes === void 0 ? 0 : _duration$minutes,\n      _duration$seconds = duration.seconds,\n      seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;\n  return \"P\".concat(years, \"Y\").concat(months, \"M\").concat(days, \"DT\").concat(hours, \"H\").concat(minutes, \"M\").concat(seconds, \"S\");\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name formatRFC3339\n * @category Common Helpers\n * @summary Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).\n *\n * @description\n * Return the formatted date string in ISO 3339 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2|3} [options.fractionDigits=0] - number of digits after the decimal point after seconds\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.fractionDigits` must be between 0 and 3\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format, 2 digits of second fraction:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })\n * //=> '2019-09-18T19:00:52.23Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format, 3 digits of second fraction\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })\n * //=> '2019-09-18T19:00:52.234Z'\n */\n\nexport default function formatRFC3339(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var fractionDigits = options.fractionDigits == null ? 0 : toInteger(options.fractionDigits); // Test if fractionDigits is between 0 and 3 _and_ is not NaN\n\n  if (!(fractionDigits >= 0 && fractionDigits <= 3)) {\n    throw new RangeError('fractionDigits must be between 0 and 3 inclusively');\n  }\n\n  var day = addLeadingZeros(originalDate.getDate(), 2);\n  var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n  var year = originalDate.getFullYear();\n  var hour = addLeadingZeros(originalDate.getHours(), 2);\n  var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getSeconds(), 2);\n  var fractionalSecond = '';\n\n  if (fractionDigits > 0) {\n    var milliseconds = originalDate.getMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));\n    fractionalSecond = '.' + addLeadingZeros(fractionalSeconds, fractionDigits);\n  }\n\n  var offset = '';\n  var tzOffset = originalDate.getTimezoneOffset();\n\n  if (tzOffset !== 0) {\n    var absoluteOffset = Math.abs(tzOffset);\n    var hourOffset = addLeadingZeros(toInteger(absoluteOffset / 60), 2);\n    var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n    var sign = tzOffset < 0 ? '+' : '-';\n    offset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n  } else {\n    offset = 'Z';\n  }\n\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day, \"T\").concat(hour, \":\").concat(minute, \":\").concat(second).concat(fractionalSecond).concat(offset);\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\nvar days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n/**\n * @name formatRFC7231\n * @category Common Helpers\n * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).\n *\n * @description\n * Return the formatted date string in RFC 7231 format.\n * The result will always be in UTC timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 18 September 2019 in RFC 7231 format:\n * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))\n * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'\n */\n\nexport default function formatRFC7231(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var dayName = days[originalDate.getUTCDay()];\n  var dayOfMonth = addLeadingZeros(originalDate.getUTCDate(), 2);\n  var monthName = months[originalDate.getUTCMonth()];\n  var year = originalDate.getUTCFullYear();\n  var hour = addLeadingZeros(originalDate.getUTCHours(), 2);\n  var minute = addLeadingZeros(originalDate.getUTCMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getUTCSeconds(), 2); // Result variables.\n\n  return \"\".concat(dayName, \", \").concat(dayOfMonth, \" \").concat(monthName, \" \").concat(year, \" \").concat(hour, \":\").concat(minute, \":\").concat(second, \" GMT\");\n}","import differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport format from '../format/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to format\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {String} the date in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\n */\n\nexport default function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var baseDate = toDate(dirtyBaseDate);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  if (!locale.formatRelative) {\n    throw new RangeError('locale must contain formatRelative property');\n  }\n\n  var diff = differenceInCalendarDays(date, baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var token;\n\n  if (diff < -6) {\n    token = 'other';\n  } else if (diff < -1) {\n    token = 'lastWeek';\n  } else if (diff < 0) {\n    token = 'yesterday';\n  } else if (diff < 1) {\n    token = 'today';\n  } else if (diff < 2) {\n    token = 'tomorrow';\n  } else if (diff < 7) {\n    token = 'nextWeek';\n  } else {\n    token = 'other';\n  }\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var utcBaseDate = subMilliseconds(baseDate, getTimezoneOffsetInMilliseconds(baseDate));\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, options);\n  return format(date, formatStr, options);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Number} unixTime - the given Unix timestamp\n * @returns {Date} the date\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * var result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\n\nexport default function fromUnixTime(dirtyUnixTime) {\n  requiredArgs(1, arguments);\n  var unixTime = toInteger(dirtyUnixTime);\n  return toDate(unixTime * 1000);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * var result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\n\nexport default function getDate(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * var result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nexport default function getDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","import toDate from '../toDate/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\nexport default function getDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isLeapYear\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * var result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\n\nexport default function isLeapYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","import toDate from '../toDate/index.js';\nimport isLeapYear from '../isLeapYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDaysInYear\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in 2012?\n * var result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\n\nexport default function getDaysInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n\n  if (isNaN(date)) {\n    return NaN;\n  }\n\n  return isLeapYear(date) ? 366 : 365;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDecade\n * @category Decade Helpers\n * @summary Get the decade of the given date.\n *\n * @description\n * Get the decade of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year of decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which decade belongs 27 November 1942?\n * var result = getDecade(new Date(1942, 10, 27))\n * //=> 1940\n */\n\nexport default function getDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  return decade;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * var result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\n\nexport default function getHours(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var hours = date.getHours();\n  return hours;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * var result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\n\nexport default function getISODay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}","import toDate from '../toDate/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\n\nexport default function getISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport addWeeks from '../addWeeks/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeeksInYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\n\nexport default function getISOWeeksInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var thisYear = startOfISOWeekYear(dirtyDate);\n  var nextYear = startOfISOWeekYear(addWeeks(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMilliseconds\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\n\nexport default function getMilliseconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = date.getMilliseconds();\n  return milliseconds;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\n\nexport default function getMinutes(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = date.getMinutes();\n  return minutes;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n/**\n * @name getOverlappingDaysInIntervals\n * @category Interval Helpers\n * @summary Get the number of days that overlap in two time intervals\n *\n * @description\n * Get the number of days that overlap in two time intervals\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   getOverlappingDaysInRanges(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   getOverlappingDaysInIntervals(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/Interval}\n * @returns {Number} the number of days that overlap in two time intervals\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals adds 1 for each started overlapping day:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping time intervals returns 0:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> 0\n */\n\nexport default function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n\n  if (!isOverlapping) {\n    return 0;\n  }\n\n  var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;\n  var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;\n  var differenceInMs = overlapEndDate - overlapStartDate;\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getSeconds\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\n\nexport default function getSeconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds();\n  return seconds;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\n\nexport default function getTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}","import getTime from '../getTime/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * var result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\n\nexport default function getUnixTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  return Math.floor(getTime(dirtyDate) / 1000);\n}","import startOfWeek from '../startOfWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the local week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * var result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * var result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * var result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\n\nexport default function getWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getWeekYear from '../getWeekYear/index.js';\nimport startOfWeek from '../startOfWeek/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the start of a week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * var result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  var date = startOfWeek(firstWeek, dirtyOptions);\n  return date;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport startOfWeekYear from '../startOfWeekYear/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * var result = getISOWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport default function getWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getDate from '../getDate/index.js';\nimport getDay from '../getDay/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeekOfMonth\n * @category Week Helpers\n * @summary Get the week of the month of the given date.\n *\n * @description\n * Get the week of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the week of month\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Which week of the month is 9 November 2017?\n * var result = getWeekOfMonth(new Date(2017, 10, 9))\n * //=> 2\n */\n\nexport default function getWeekOfMonth(date, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var currentDayOfMonth = getDate(date);\n\n  if (isNaN(currentDayOfMonth)) {\n    return currentDayOfMonth;\n  }\n\n  var startWeekDay = getDay(startOfMonth(date));\n  var lastDayOfFirstWeek = 0;\n\n  if (startWeekDay >= weekStartsOn) {\n    lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;\n  } else {\n    lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  }\n\n  var weekNumber = 1;\n\n  if (currentDayOfMonth > lastDayOfFirstWeek) {\n    var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n    weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);\n  }\n\n  return weekNumber;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import differenceInCalendarWeeks from '../differenceInCalendarWeeks/index.js';\nimport lastDayOfMonth from '../lastDayOfMonth/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeeksInMonth\n * @category Week Helpers\n * @summary Get the number of calendar weeks a month spans.\n *\n * @description\n * Get the number of calendar weeks the month in the given date spans.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks does February 2015 span?\n * var result = getWeeksInMonth(new Date(2015, 1, 8))\n * //=> 4\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks does July 2017 span?\n * var result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\n * //=> 6\n */\n\nexport default function getWeeksInMonth(date, options) {\n  requiredArgs(1, arguments);\n  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * var result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * var result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import subDays from '../subDays/index.js';\nimport subMonths from '../subMonths/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(toDate(dirtyDate), months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInYears from '../differenceInYears/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInDays from '../differenceInDays/index.js';\nimport differenceInHours from '../differenceInHours/index.js';\nimport differenceInMinutes from '../differenceInMinutes/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport isValid from '../isValid/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toDate from '../toDate/index.js';\nimport sub from '../sub/index.js';\n/**\n * @name intervalToDuration\n * @category Common Helpers\n * @summary Convert interval to duration\n *\n * @description\n * Convert a interval object to a duration object.\n *\n * @param {Interval} interval - the interval to convert to duration\n *\n * @returns {Duration} The duration Object\n * @throws {TypeError} Requires 2 arguments\n * @throws {RangeError} `start` must not be Invalid Date\n * @throws {RangeError} `end` must not be Invalid Date\n *\n * @example\n * // Get the duration between January 15, 1929 and April 4, 1968.\n * intervalToDuration({\n *   start: new Date(1929, 0, 15, 12, 0, 0),\n *   end: new Date(1968, 3, 4, 19, 5, 0)\n * })\n * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }\n */\n\nexport default function intervalToDuration(_ref) {\n  var start = _ref.start,\n      end = _ref.end;\n  requiredArgs(1, arguments);\n  var dateLeft = toDate(start);\n  var dateRight = toDate(end);\n\n  if (!isValid(dateLeft)) {\n    throw new RangeError('Start Date is invalid');\n  }\n\n  if (!isValid(dateRight)) {\n    throw new RangeError('End Date is invalid');\n  }\n\n  var duration = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  var sign = compareAsc(dateLeft, dateRight);\n  duration.years = Math.abs(differenceInYears(dateLeft, dateRight));\n  var remainingMonths = sub(dateLeft, {\n    years: sign * duration.years\n  });\n  duration.months = Math.abs(differenceInMonths(remainingMonths, dateRight));\n  var remainingDays = sub(remainingMonths, {\n    months: sign * duration.months\n  });\n  duration.days = Math.abs(differenceInDays(remainingDays, dateRight));\n  var remainingHours = sub(remainingDays, {\n    days: sign * duration.days\n  });\n  duration.hours = Math.abs(differenceInHours(remainingHours, dateRight));\n  var remainingMinutes = sub(remainingHours, {\n    hours: sign * duration.hours\n  });\n  duration.minutes = Math.abs(differenceInMinutes(remainingMinutes, dateRight));\n  var remainingSeconds = sub(remainingMinutes, {\n    minutes: sign * duration.minutes\n  });\n  duration.seconds = Math.abs(differenceInSeconds(remainingSeconds, dateRight));\n  return duration;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * var result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * var result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * var result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * var result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\n\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","/**\n * @name isExists\n * @category Common Helpers\n * @summary Is the given date exists?\n *\n * @description\n * Checks if the given arguments convert to an existing date.\n *\n * @param {Number} year of the date to check\n * @param {Number} month of the date to check\n * @param {Number} day of the date to check\n * @returns {Boolean} the date exists\n * @throws {TypeError} 3 arguments required\n *\n * @example\n * // For the valid date:\n * var result = isExists(2018, 0, 31)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isExists(2018, 1, 31)\n * //=> false\n */\nexport default function isExists(year, month, day) {\n  if (arguments.length < 3) {\n    throw new TypeError('3 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = new Date(year, month, day);\n  return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFirstDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * var result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\n\nexport default function isFirstDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDate() === 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFriday\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 26 September 2014 Friday?\n * var result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\n\nexport default function isFriday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 5;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\n\nexport default function isFuture(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() > Date.now();\n}","import toDate from '../toDate/index.js';\nimport endOfDay from '../endOfDay/index.js';\nimport endOfMonth from '../endOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCISOWeek from '../getUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCWeek from '../getUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport assign from '../_lib/assign/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport parsers from './_lib/parsers/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   toDate('2016-01-01')\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import parse from '../parse/index.js';\nimport isValid from '../isValid/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isMatch\n * @category Common Helpers\n * @summary validates the date string against given formats\n *\n * @description\n * Return the true if given date is string correct against the given format else\n * will return false.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * isMatch('23 AM', 'HH a')\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `isMatch` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `isMatch` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `isMatch` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `isMatch('50', 'yy') //=> true`\n *\n *    `isMatch('75', 'yy') //=> true`\n *\n *    while `uu` will use the year as is:\n *\n *    `isMatch('50', 'uu') //=> true`\n *\n *    `isMatch('75', 'uu') //=> true`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be checked in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are matched (e.g. when matching string 'January 1st' without a year),\n * the values will be taken from today's using `new Date()` date which works as a context of parsing.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n *\n *\n * @param {String} dateString - the date string to verify\n * @param {String} formatString - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Boolean}\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Match 11 February 2014 from middle-endian format:\n * var result = isMatch('02/11/2014', 'MM/dd/yyyy')\n * //=> true\n *\n * @example\n * // Match 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = isMatch('28-a de februaro', \"do 'de' MMMM\", {\n *   locale: eo\n * })\n * //=> true\n */\n\nexport default function isMatch(dateString, formatString, dirtyOptions) {\n  requiredArgs(2, arguments);\n  return isValid(parse(dateString, formatString, new Date(), dirtyOptions));\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isMonday\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 22 September 2014 Monday?\n * var result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isMonday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isPast(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() < Date.now();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * var result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import startOfHour from '../startOfHour/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameHour\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n * //=> true\n */\n\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}","import startOfWeek from '../startOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n */\n\nexport default function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import isSameWeek from '../isSameWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameISOWeek\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week?\n *\n * @description\n * Are the given dates in the same ISO week?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * var result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n * //=> true\n */\n\nexport default function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {\n    weekStartsOn: 1\n  });\n}","import startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n * //=> true\n */\n\nexport default function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfYear = startOfISOWeekYear(dirtyDateLeft);\n  var dateRightStartOfYear = startOfISOWeekYear(dirtyDateRight);\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\n\nexport default function startOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(0, 0);\n  return date;\n}","import startOfMinute from '../startOfMinute/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameMinute\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\n\nexport default function isSameMinute(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft);\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight);\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import startOfQuarter from '../startOfQuarter/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameQuarter\n * @category Quarter Helpers\n * @summary Are the given dates in the same year quarter?\n *\n * @description\n * Are the given dates in the same year quarter?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * var result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\n * //=> true\n */\n\nexport default function isSameQuarter(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft);\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight);\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfSecond\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\n\nexport default function startOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(0);\n  return date;\n}","import startOfSecond from '../startOfSecond/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameSecond\n * @category Second Helpers\n * @summary Are the given dates in the same second?\n *\n * @description\n * Are the given dates in the same second?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n * // in the same second?\n * var result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n */\n\nexport default function isSameSecond(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft);\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight);\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}","import isSameHour from '../isSameHour/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisHour\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * var result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\n\nexport default function isThisHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameHour(Date.now(), dirtyDate);\n}","import isSameISOWeek from '../isSameISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisISOWeek\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * var result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isThisISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameISOWeek(dirtyDate, Date.now());\n}","import isSameMinute from '../isSameMinute/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisMinute\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\n\nexport default function isThisMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMinute(Date.now(), dirtyDate);\n}","import isSameMonth from '../isSameMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisMonth\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * var result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\n\nexport default function isThisMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMonth(Date.now(), dirtyDate);\n}","import isSameQuarter from '../isSameQuarter/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisQuarter\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * var result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameQuarter(Date.now(), dirtyDate);\n}","import isSameSecond from '../isSameSecond/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisSecond\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\n\nexport default function isThisSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameSecond(Date.now(), dirtyDate);\n}","import isSameWeek from '../isSameWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\n\nexport default function isThisWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return isSameWeek(dirtyDate, Date.now(), options);\n}","import isSameYear from '../isSameYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisYear\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameYear(dirtyDate, Date.now());\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThursday\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * var result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isThursday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 4;\n}","import isSameDay from '../isSameDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import addDays from '../addDays/index.js';\nimport isSameDay from '../isSameDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\n\nexport default function isTomorrow(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, addDays(Date.now(), 1));\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isTuesday\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * var result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\n\nexport default function isTuesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 2;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWednesday\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * var result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\n\nexport default function isWednesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 3;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isWithinRange` to `isWithinInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   isWithinRange(\n *     new Date(2014, 0, 3),\n *     new Date(2014, 0, 1), new Date(2014, 0, 7)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   isWithinInterval(\n *     new Date(2014, 0, 3),\n *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\n\nexport default function isWithinInterval(dirtyDate, dirtyInterval) {\n  requiredArgs(2, arguments);\n  var interval = dirtyInterval || {};\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  return time >= startTime && time <= endTime;\n}","import isSameDay from '../isSameDay/index.js';\nimport subDays from '../subDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\n\nexport default function isYesterday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, subDays(Date.now(), 1));\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfDecade\n * @category Decade Helpers\n * @summary Return the last day of a decade for the given date.\n *\n * @description\n * Return the last day of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a decade for 21 December 2012 21:12:00:\n * var result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))\n * //=> Wed Dec 31 2019 00:00:00\n */\n\nexport default function lastDayOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfWeek\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setHours(0, 0, 0, 0);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import lastDayOfWeek from '../lastDayOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return lastDayOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * var result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\n\nexport default function lastDayOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  date.setDate(date.getDate() - 1);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfQuarter\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the last day of a quarter\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfYear\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\n\nexport default function lastDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/lightFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport isValid from '../isValid/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name lightFormat\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. Unlike `format`,\n * `lightFormat` doesn't use locales and outputs date using the most popular tokens.\n *\n * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   |\n * |---------------------------------|---------|-----------------------------------|\n * | AM, PM                          | a..aaa  | AM, PM                            |\n * |                                 | aaaa    | a.m., p.m.                        |\n * |                                 | aaaaa   | a, p                              |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 |\n * |                                 | yy      | 44, 01, 00, 17                    |\n * |                                 | yyy     | 044, 001, 000, 017                |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |\n * |                                 | MM      | 01, 02, ..., 12                   |\n * | Day of month                    | d       | 1, 2, ..., 31                     |\n * |                                 | dd      | 01, 02, ..., 31                   |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n * |                                 | hh      | 01, 02, ..., 11, 12               |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n * |                                 | HH      | 00, 01, 02, ..., 23               |\n * | Minute                          | m       | 0, 1, ..., 59                     |\n * |                                 | mm      | 00, 01, ..., 59                   |\n * | Second                          | s       | 0, 1, ..., 59                     |\n * |                                 | ss      | 00, 01, ..., 59                   |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |\n * |                                 | SS      | 00, 01, ..., 99                   |\n * |                                 | SSS     | 000, 0001, ..., 999               |\n * |                                 | SSSS    | ...                               |\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * var result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')\n * //=> '2014-02-11'\n */\n\nexport default function lightFormat(dirtyDate, dirtyFormatStr) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var result = formatStr.match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      return formatter(utcDate, substring, null, {});\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `max` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var maxDate = max(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var maxDate = max(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the latest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\n\nexport default function max(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result < currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name min\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `min` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var minDate = min(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var minDate = min(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the earliest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\n\nexport default function min(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result > currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate(), dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    result.setFullYear(dirtyDate.getUTCFullYear());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name parseJSON\n * @category Common Helpers\n * @summary Parse a JSON date string\n *\n * @description\n * Converts a complete ISO date string in UTC time, the typical format for transmitting\n * a date in JSON, to a JavaScript `Date` instance.\n *\n * This is a minimal implementation for converting dates retrieved from a JSON API to\n * a `Date` instance which can be used with other functions in the `date-fns` library.\n * The following formats are supported:\n *\n * - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n * - `2000-03-15T05:20:10Z`: Without milliseconds\n * - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n * - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n * - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n * - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds\n * - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting\n *\n * For convenience and ease of use these other input types are also supported\n * via [toDate]{@link https://date-fns.org/docs/toDate}:\n *\n * - A `Date` instance will be cloned\n * - A `number` will be treated as a timestamp\n *\n * Any other input type or invalid date strings will return an `Invalid Date`.\n *\n * @param {String|Number|Date} argument A fully formed ISO8601 date string to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n */\n\nexport default function parseJSON(argument) {\n  requiredArgs(1, arguments);\n\n  if (typeof argument === 'string') {\n    var parts = argument.match(/(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{0,7}))?(?:Z|\\+00:?00)?/);\n\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));\n    }\n\n    return new Date(NaN);\n  }\n\n  return toDate(argument);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name roundToNearestMinutes\n * @category Minute Helpers\n * @summary Rounds the given date to the nearest minute\n *\n * @description\n * Rounds the given date to the nearest minute (or number of minutes).\n * Rounds up when the given date is exactly between the nearest round minutes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to round\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.\n * @returns {Date} the new date rounded to the closest minute\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.nearestTo` must be between 1 and 30\n *\n * @example\n * // Round 10 July 2014 12:12:34 to nearest minute:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))\n * //=> Thu Jul 10 2014 12:13:00\n *\n * @example\n * // Round 10 July 2014 12:07:30 to nearest quarter hour:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })\n * // rounds up because given date is exactly between 12:00:00 and 12:15:00\n * //=> Thu Jul 10 2014 12:15:00\n */\n\nexport default function roundToNearestMinutes(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only none provided present');\n  }\n\n  var nearestTo = options && 'nearestTo' in options ? toInteger(options.nearestTo) : 1;\n\n  if (nearestTo < 1 || nearestTo > 30) {\n    throw new RangeError('`options.nearestTo` must be between 1 and 30');\n  }\n\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case\n\n  var minutes = date.getMinutes() + seconds / 60;\n  var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;\n  var remainderMinutes = minutes % nearestTo;\n  var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\n\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","import toDate from '../toDate/index.js';\nimport setMonth from '../setMonth/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name set\n * @category Common Helpers\n * @summary Set date values to a given date.\n *\n * @description\n * Set date values to a given date.\n *\n * Sets time values to date from object `values`.\n * A value is not set if it is undefined or null or doesn't exist in `values`.\n *\n * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\n * to use native `Date#setX` methods. If you use this function, you may not want to include the\n * other `setX` functions that date-fns provides if you are concerned about the bundle size.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Object} values - an object with options\n * @param {Number} [values.year] - the number of years to be set\n * @param {Number} [values.month] - the number of months to be set\n * @param {Number} [values.date] - the number of days to be set\n * @param {Number} [values.hours] - the number of hours to be set\n * @param {Number} [values.minutes] - the number of minutes to be set\n * @param {Number} [values.seconds] - the number of seconds to be set\n * @param {Number} [values.milliseconds] - the number of milliseconds to be set\n * @returns {Date} the new date with options set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `values` must be an object\n *\n * @example\n * // Transform 1 September 2014 into 20 October 2015 in a single line:\n * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n * //=> Tue Oct 20 2015 00:00:00\n *\n * @example\n * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\n * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n * //=> Mon Sep 01 2014 12:23:45\n */\n\nexport default function set(dirtyDate, values) {\n  requiredArgs(2, arguments);\n\n  if (typeof values !== 'object' || values === null) {\n    throw new RangeError('values parameter must be an object');\n  }\n\n  var date = toDate(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  if (values.year != null) {\n    date.setFullYear(values.year);\n  }\n\n  if (values.month != null) {\n    date = setMonth(date, values.month);\n  }\n\n  if (values.date != null) {\n    date.setDate(toInteger(values.date));\n  }\n\n  if (values.hours != null) {\n    date.setHours(toInteger(values.hours));\n  }\n\n  if (values.minutes != null) {\n    date.setMinutes(toInteger(values.minutes));\n  }\n\n  if (values.seconds != null) {\n    date.setSeconds(toInteger(values.seconds));\n  }\n\n  if (values.milliseconds != null) {\n    date.setMilliseconds(toInteger(values.milliseconds));\n  }\n\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDate\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * var result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function setDate(dirtyDate, dirtyDayOfMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = toInteger(dirtyDayOfMonth);\n  date.setDate(dayOfMonth);\n  return date;\n}","import addDays from '../addDays/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate, options);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var delta = 7 - weekStartsOn;\n  var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;\n  return addDays(date, diff, options);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDayOfYear\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * var result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\n\nexport default function setDayOfYear(dirtyDate, dirtyDayOfYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfYear = toInteger(dirtyDayOfYear);\n  date.setMonth(0);\n  date.setDate(dayOfYear);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setHours\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\n\nexport default function setHours(dirtyDate, dirtyHours) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var hours = toInteger(dirtyHours);\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport addDays from '../addDays/index.js';\nimport getISODay from '../getISODay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = getISODay(date);\n  var diff = day - currentDay;\n  return addDays(date, diff);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getISOWeek from '../getISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * var result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getISOWeek(date) - isoWeek;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMilliseconds\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\n\nexport default function setMilliseconds(dirtyDate, dirtyMilliseconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = toInteger(dirtyMilliseconds);\n  date.setMilliseconds(milliseconds);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMinutes\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\n\nexport default function setMinutes(dirtyDate, dirtyMinutes) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = toInteger(dirtyMinutes);\n  date.setMinutes(minutes);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport setMonth from '../setMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setQuarter\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * var result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\n\nexport default function setQuarter(dirtyDate, dirtyQuarter) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = toInteger(dirtyQuarter);\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1;\n  var diff = quarter - oldQuarter;\n  return setMonth(date, date.getMonth() + diff * 3);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setSeconds\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\n\nexport default function setSeconds(dirtyDate, dirtySeconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = toInteger(dirtySeconds);\n  date.setSeconds(seconds);\n  return date;\n}","import getWeek from '../getWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} week - the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * var result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * var result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\n\nexport default function setWeek(dirtyDate, dirtyWeek, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getWeek(date, dirtyOptions) - week;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport startOfWeekYear from '../startOfWeekYear/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Set the local week-numbering year to the given date.\n *\n * @description\n * Set the local week-numbering year to the given date,\n * saving the week number and the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} weekYear - the local week-numbering year of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week-numbering year set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010 with default options:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004)\n * //=> Sat Jan 03 2004 00:00:00\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010,\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setWeekYear(dirtyDate, dirtyWeekYear, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var date = toDate(dirtyDate);\n  var weekYear = toInteger(dirtyWeekYear);\n  var diff = differenceInCalendarDays(date, startOfWeekYear(date, dirtyOptions));\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  date = startOfWeekYear(firstWeek, dirtyOptions);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\n\nexport default function setYear(dirtyDate, dirtyYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var year = toInteger(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  date.setFullYear(year);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDecade\n * @category Decade Helpers\n * @summary Return the start of a decade for the given date.\n *\n * @description\n * Return the start of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a decade for 21 October 2015 00:00:00:\n * var result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))\n * //=> Jan 01 2010 00:00:00\n */\n\nexport default function startOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","/**\n * @name startOfTomorrow\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n * @pure false\n *\n * @description\n * Return the start of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nexport default function startOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","/**\n * @name startOfYesterday\n * @category Day Helpers\n * @summary Return the start of yesterday.\n * @pure false\n *\n * @description\n * Return the start of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nexport default function startOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addBusinessDays from '../addBusinessDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subBusinessDays\n * @category Day Helpers\n * @summary Substract the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Substract 10 business days from 1 September 2014:\n * var result = subBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function subBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addBusinessDays(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addHours from '../addHours/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subHours\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\n\nexport default function subHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addHours(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMinutes from '../addMinutes/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMinutes\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\n\nexport default function subMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMinutes(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addQuarters from '../addQuarters/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subQuarters\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * var result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\n\nexport default function subQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addQuarters(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addSeconds from '../addSeconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subSeconds\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\n\nexport default function subSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addSeconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addWeeks from '../addWeeks/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subWeeks\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * var result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\n\nexport default function subWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addWeeks(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addYears from '../addYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\n\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","/**\n *  Maximum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n *  Minimum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\n\nexport var minTime = -maxTime;","// This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.\nexport { default as add } from './add/index.js';\nexport { default as addBusinessDays } from './addBusinessDays/index.js';\nexport { default as addDays } from './addDays/index.js';\nexport { default as addHours } from './addHours/index.js';\nexport { default as addISOWeekYears } from './addISOWeekYears/index.js';\nexport { default as addMilliseconds } from './addMilliseconds/index.js';\nexport { default as addMinutes } from './addMinutes/index.js';\nexport { default as addMonths } from './addMonths/index.js';\nexport { default as addQuarters } from './addQuarters/index.js';\nexport { default as addSeconds } from './addSeconds/index.js';\nexport { default as addWeeks } from './addWeeks/index.js';\nexport { default as addYears } from './addYears/index.js';\nexport { default as areIntervalsOverlapping } from './areIntervalsOverlapping/index.js';\nexport { default as closestIndexTo } from './closestIndexTo/index.js';\nexport { default as closestTo } from './closestTo/index.js';\nexport { default as compareAsc } from './compareAsc/index.js';\nexport { default as compareDesc } from './compareDesc/index.js';\nexport { default as differenceInBusinessDays } from './differenceInBusinessDays/index.js';\nexport { default as differenceInCalendarDays } from './differenceInCalendarDays/index.js';\nexport { default as differenceInCalendarISOWeekYears } from './differenceInCalendarISOWeekYears/index.js';\nexport { default as differenceInCalendarISOWeeks } from './differenceInCalendarISOWeeks/index.js';\nexport { default as differenceInCalendarMonths } from './differenceInCalendarMonths/index.js';\nexport { default as differenceInCalendarQuarters } from './differenceInCalendarQuarters/index.js';\nexport { default as differenceInCalendarWeeks } from './differenceInCalendarWeeks/index.js';\nexport { default as differenceInCalendarYears } from './differenceInCalendarYears/index.js';\nexport { default as differenceInDays } from './differenceInDays/index.js';\nexport { default as differenceInHours } from './differenceInHours/index.js';\nexport { default as differenceInISOWeekYears } from './differenceInISOWeekYears/index.js';\nexport { default as differenceInMilliseconds } from './differenceInMilliseconds/index.js';\nexport { default as differenceInMinutes } from './differenceInMinutes/index.js';\nexport { default as differenceInMonths } from './differenceInMonths/index.js';\nexport { default as differenceInQuarters } from './differenceInQuarters/index.js';\nexport { default as differenceInSeconds } from './differenceInSeconds/index.js';\nexport { default as differenceInWeeks } from './differenceInWeeks/index.js';\nexport { default as differenceInYears } from './differenceInYears/index.js';\nexport { default as eachDayOfInterval } from './eachDayOfInterval/index.js';\nexport { default as eachHourOfInterval } from './eachHourOfInterval/index.js';\nexport { default as eachMonthOfInterval } from './eachMonthOfInterval/index.js';\nexport { default as eachQuarterOfInterval } from './eachQuarterOfInterval/index.js';\nexport { default as eachWeekOfInterval } from './eachWeekOfInterval/index.js';\nexport { default as eachWeekendOfInterval } from './eachWeekendOfInterval/index.js';\nexport { default as eachWeekendOfMonth } from './eachWeekendOfMonth/index.js';\nexport { default as eachWeekendOfYear } from './eachWeekendOfYear/index.js';\nexport { default as eachYearOfInterval } from './eachYearOfInterval/index.js';\nexport { default as endOfDay } from './endOfDay/index.js';\nexport { default as endOfDecade } from './endOfDecade/index.js';\nexport { default as endOfHour } from './endOfHour/index.js';\nexport { default as endOfISOWeek } from './endOfISOWeek/index.js';\nexport { default as endOfISOWeekYear } from './endOfISOWeekYear/index.js';\nexport { default as endOfMinute } from './endOfMinute/index.js';\nexport { default as endOfMonth } from './endOfMonth/index.js';\nexport { default as endOfQuarter } from './endOfQuarter/index.js';\nexport { default as endOfSecond } from './endOfSecond/index.js';\nexport { default as endOfToday } from './endOfToday/index.js';\nexport { default as endOfTomorrow } from './endOfTomorrow/index.js';\nexport { default as endOfWeek } from './endOfWeek/index.js';\nexport { default as endOfYear } from './endOfYear/index.js';\nexport { default as endOfYesterday } from './endOfYesterday/index.js';\nexport { default as format } from './format/index.js';\nexport { default as formatDistance } from './formatDistance/index.js';\nexport { default as formatDistanceStrict } from './formatDistanceStrict/index.js';\nexport { default as formatDistanceToNow } from './formatDistanceToNow/index.js';\nexport { default as formatDistanceToNowStrict } from './formatDistanceToNowStrict/index.js';\nexport { default as formatDuration } from './formatDuration/index.js';\nexport { default as formatISO } from './formatISO/index.js';\nexport { default as formatISO9075 } from './formatISO9075/index.js';\nexport { default as formatISODuration } from './formatISODuration/index.js';\nexport { default as formatRFC3339 } from './formatRFC3339/index.js';\nexport { default as formatRFC7231 } from './formatRFC7231/index.js';\nexport { default as formatRelative } from './formatRelative/index.js';\nexport { default as fromUnixTime } from './fromUnixTime/index.js';\nexport { default as getDate } from './getDate/index.js';\nexport { default as getDay } from './getDay/index.js';\nexport { default as getDayOfYear } from './getDayOfYear/index.js';\nexport { default as getDaysInMonth } from './getDaysInMonth/index.js';\nexport { default as getDaysInYear } from './getDaysInYear/index.js';\nexport { default as getDecade } from './getDecade/index.js';\nexport { default as getHours } from './getHours/index.js';\nexport { default as getISODay } from './getISODay/index.js';\nexport { default as getISOWeek } from './getISOWeek/index.js';\nexport { default as getISOWeekYear } from './getISOWeekYear/index.js';\nexport { default as getISOWeeksInYear } from './getISOWeeksInYear/index.js';\nexport { default as getMilliseconds } from './getMilliseconds/index.js';\nexport { default as getMinutes } from './getMinutes/index.js';\nexport { default as getMonth } from './getMonth/index.js';\nexport { default as getOverlappingDaysInIntervals } from './getOverlappingDaysInIntervals/index.js';\nexport { default as getQuarter } from './getQuarter/index.js';\nexport { default as getSeconds } from './getSeconds/index.js';\nexport { default as getTime } from './getTime/index.js';\nexport { default as getUnixTime } from './getUnixTime/index.js';\nexport { default as getWeek } from './getWeek/index.js';\nexport { default as getWeekOfMonth } from './getWeekOfMonth/index.js';\nexport { default as getWeekYear } from './getWeekYear/index.js';\nexport { default as getWeeksInMonth } from './getWeeksInMonth/index.js';\nexport { default as getYear } from './getYear/index.js';\nexport { default as intervalToDuration } from './intervalToDuration/index.js';\nexport { default as isAfter } from './isAfter/index.js';\nexport { default as isBefore } from './isBefore/index.js';\nexport { default as isDate } from './isDate/index.js';\nexport { default as isEqual } from './isEqual/index.js';\nexport { default as isExists } from './isExists/index.js';\nexport { default as isFirstDayOfMonth } from './isFirstDayOfMonth/index.js';\nexport { default as isFriday } from './isFriday/index.js';\nexport { default as isFuture } from './isFuture/index.js';\nexport { default as isLastDayOfMonth } from './isLastDayOfMonth/index.js';\nexport { default as isLeapYear } from './isLeapYear/index.js';\nexport { default as isMatch } from './isMatch/index.js';\nexport { default as isMonday } from './isMonday/index.js';\nexport { default as isPast } from './isPast/index.js';\nexport { default as isSameDay } from './isSameDay/index.js';\nexport { default as isSameHour } from './isSameHour/index.js';\nexport { default as isSameISOWeek } from './isSameISOWeek/index.js';\nexport { default as isSameISOWeekYear } from './isSameISOWeekYear/index.js';\nexport { default as isSameMinute } from './isSameMinute/index.js';\nexport { default as isSameMonth } from './isSameMonth/index.js';\nexport { default as isSameQuarter } from './isSameQuarter/index.js';\nexport { default as isSameSecond } from './isSameSecond/index.js';\nexport { default as isSameWeek } from './isSameWeek/index.js';\nexport { default as isSameYear } from './isSameYear/index.js';\nexport { default as isSaturday } from './isSaturday/index.js';\nexport { default as isSunday } from './isSunday/index.js';\nexport { default as isThisHour } from './isThisHour/index.js';\nexport { default as isThisISOWeek } from './isThisISOWeek/index.js';\nexport { default as isThisMinute } from './isThisMinute/index.js';\nexport { default as isThisMonth } from './isThisMonth/index.js';\nexport { default as isThisQuarter } from './isThisQuarter/index.js';\nexport { default as isThisSecond } from './isThisSecond/index.js';\nexport { default as isThisWeek } from './isThisWeek/index.js';\nexport { default as isThisYear } from './isThisYear/index.js';\nexport { default as isThursday } from './isThursday/index.js';\nexport { default as isToday } from './isToday/index.js';\nexport { default as isTomorrow } from './isTomorrow/index.js';\nexport { default as isTuesday } from './isTuesday/index.js';\nexport { default as isValid } from './isValid/index.js';\nexport { default as isWednesday } from './isWednesday/index.js';\nexport { default as isWeekend } from './isWeekend/index.js';\nexport { default as isWithinInterval } from './isWithinInterval/index.js';\nexport { default as isYesterday } from './isYesterday/index.js';\nexport { default as lastDayOfDecade } from './lastDayOfDecade/index.js';\nexport { default as lastDayOfISOWeek } from './lastDayOfISOWeek/index.js';\nexport { default as lastDayOfISOWeekYear } from './lastDayOfISOWeekYear/index.js';\nexport { default as lastDayOfMonth } from './lastDayOfMonth/index.js';\nexport { default as lastDayOfQuarter } from './lastDayOfQuarter/index.js';\nexport { default as lastDayOfWeek } from './lastDayOfWeek/index.js';\nexport { default as lastDayOfYear } from './lastDayOfYear/index.js';\nexport { default as lightFormat } from './lightFormat/index.js';\nexport { default as max } from './max/index.js';\nexport { default as min } from './min/index.js';\nexport { default as parse } from './parse/index.js';\nexport { default as parseISO } from './parseISO/index.js';\nexport { default as parseJSON } from './parseJSON/index.js';\nexport { default as roundToNearestMinutes } from './roundToNearestMinutes/index.js';\nexport { default as set } from './set/index.js';\nexport { default as setDate } from './setDate/index.js';\nexport { default as setDay } from './setDay/index.js';\nexport { default as setDayOfYear } from './setDayOfYear/index.js';\nexport { default as setHours } from './setHours/index.js';\nexport { default as setISODay } from './setISODay/index.js';\nexport { default as setISOWeek } from './setISOWeek/index.js';\nexport { default as setISOWeekYear } from './setISOWeekYear/index.js';\nexport { default as setMilliseconds } from './setMilliseconds/index.js';\nexport { default as setMinutes } from './setMinutes/index.js';\nexport { default as setMonth } from './setMonth/index.js';\nexport { default as setQuarter } from './setQuarter/index.js';\nexport { default as setSeconds } from './setSeconds/index.js';\nexport { default as setWeek } from './setWeek/index.js';\nexport { default as setWeekYear } from './setWeekYear/index.js';\nexport { default as setYear } from './setYear/index.js';\nexport { default as startOfDay } from './startOfDay/index.js';\nexport { default as startOfDecade } from './startOfDecade/index.js';\nexport { default as startOfHour } from './startOfHour/index.js';\nexport { default as startOfISOWeek } from './startOfISOWeek/index.js';\nexport { default as startOfISOWeekYear } from './startOfISOWeekYear/index.js';\nexport { default as startOfMinute } from './startOfMinute/index.js';\nexport { default as startOfMonth } from './startOfMonth/index.js';\nexport { default as startOfQuarter } from './startOfQuarter/index.js';\nexport { default as startOfSecond } from './startOfSecond/index.js';\nexport { default as startOfToday } from './startOfToday/index.js';\nexport { default as startOfTomorrow } from './startOfTomorrow/index.js';\nexport { default as startOfWeek } from './startOfWeek/index.js';\nexport { default as startOfWeekYear } from './startOfWeekYear/index.js';\nexport { default as startOfYear } from './startOfYear/index.js';\nexport { default as startOfYesterday } from './startOfYesterday/index.js';\nexport { default as sub } from './sub/index.js';\nexport { default as subBusinessDays } from './subBusinessDays/index.js';\nexport { default as subDays } from './subDays/index.js';\nexport { default as subHours } from './subHours/index.js';\nexport { default as subISOWeekYears } from './subISOWeekYears/index.js';\nexport { default as subMilliseconds } from './subMilliseconds/index.js';\nexport { default as subMinutes } from './subMinutes/index.js';\nexport { default as subMonths } from './subMonths/index.js';\nexport { default as subQuarters } from './subQuarters/index.js';\nexport { default as subSeconds } from './subSeconds/index.js';\nexport { default as subWeeks } from './subWeeks/index.js';\nexport { default as subYears } from './subYears/index.js';\nexport { default as toDate } from './toDate/index.js';\nexport * from './constants/index.js';","export const header = {\n  toggler: document.querySelector('#menuToggler'),\n  home: document.querySelector('#home'),\n}\n\nexport const sidebar = {\n  sidebar: document.querySelector('#sidebar'),\n  container: document.querySelector('#sidebarContainer'),\n  projectTitles: document.querySelector('#projectTitles'),\n}\n\nexport const addProjectForm = {\n  form: document.querySelector('#addProject'),\n  input: document.querySelector('#projectTitle'),\n}\n\nexport const dashboard = {\n  dashboard: document.querySelector('#dashboard'),\n  project: document.querySelector('#projectTasks'),\n}\n\nexport const addTaskForm = {\n  toggler: document.querySelector('#addTaskFormToggler'),\n  container: document.querySelector('#addTaskFormContainer'),\n  form: document.querySelector('#addTaskForm'),\n  cancel: document.querySelector('#cancelAddTask'),\n  title: document.querySelector('#title'),\n  description: document.querySelector('#description'),\n  priority: document.querySelector('#priority'),\n  date: document.querySelector('#date'),\n  project: document.querySelector('#project'),\n}\n","import './styles/styles.scss'\nimport { v4 as uuidv4 } from 'uuid'\nimport { stringToHTML } from './helpers/stringToHTML'\nimport { taskForm } from './components/taskForm'\nimport { taskItem } from './components/taskItem'\nimport { format } from 'date-fns'\n\nimport {\n  header,\n  sidebar,\n  dashboard,\n  addProjectForm,\n  addTaskForm,\n} from './helpers/domNodes'\n\nconst AppDOM = (() => {\n  const hide = (element, closed) => {\n    // console.log('Element Hidden: ', element)\n    element.classList.add(closed ? closed : 'hide')\n  }\n  const unhide = (element, closed) => {\n    // console.log('Element Unhidden: ', element)\n    element.classList.remove(closed ? closed : 'hide')\n  }\n  const toggleHide = (element, closed) => {\n    // console.log('Element Unhidden: ', element)\n    element.classList.toggle(closed ? closed : 'hide')\n  }\n  const addProjectToSidebar = () => {\n    sidebar.projectTitles.innerHTML = ''\n    // console.log('App: ', AppData.projects)\n    AppData.projects.forEach(project => {\n      let html = `<div>${project.title}</div>`\n      const projectEl = stringToHTML(`${html}`, 'li')\n      projectEl.onclick = () => {\n        AppDOM.addProjectToDashboard(project)\n        // console.log('Sidebar: ', project)\n      }\n      sidebar.projectTitles.appendChild(projectEl)\n    })\n  }\n\n  const activeProject = current => {\n    projectTitles.querySelectorAll('li').forEach(project => {\n      if (project.textContent === current.title) {\n        project.classList.add('active')\n      } else {\n        project.classList.remove('active')\n      }\n    })\n  }\n  const addProjectToDashboard = current => {\n    dashboard.project.innerHTML = ''\n    const projectEl = stringToHTML(`<h1>${current.title}</h1>`, 'div')\n    projectEl.classList.add(`${current.id}`)\n    dashboard.project.appendChild(projectEl)\n    dashboard.project.appendChild(addTaskToDashboard(current))\n    activeProject(current)\n  }\n\n  const addTaskToDashboard = current => {\n    console.log('addTaskToDashboard', current)\n    const currentTask = stringToHTML(`<ul></ul>`)\n    current.tasks.forEach(task => {\n      const currentTaskItem = taskItem(task, AppDOM, current, AppData.projects)\n      currentTask.appendChild(currentTaskItem)\n      console.log(currentTaskItem)\n      AppForms.createTaskForm(currentTaskItem, task, current, 'edit')\n    })\n    return currentTask\n  }\n\n  return {\n    hide,\n    unhide,\n    toggleHide,\n    addProjectToSidebar,\n    addProjectToDashboard,\n  }\n})()\n\nconst AppForms = (() => {\n  const createProjectForm = () => {\n    addProjectForm.form.onsubmit = e => {\n      e.preventDefault()\n      const newProject = new Project(addProjectForm.input.value)\n      newProject.create()\n      AppDOM.addProjectToSidebar()\n      AppDOM.addProjectToDashboard(newProject)\n      addProjectForm.input.value = ''\n      console.log('Form createProjectForm')\n    }\n  }\n  const createTaskForm = (form, task, project, type) => {\n    form.onsubmit = e => {\n      e.preventDefault()\n      console.log('Form createTaskForm', task)\n\n      const formInput = {\n        title: form.querySelector('#title'),\n        description: form.querySelector('#description'),\n        priority: form.querySelector('#priority'),\n        date: form.querySelector('#date'),\n        project: form.querySelector('#project'),\n      }\n      const { title, description, priority, date } = formInput\n\n      if (type === 'add') {\n        console.log('add')\n      } else if (type === 'edit') {\n        task.edit(title.value, description.value, priority.value, date.value)\n      }\n\n      AppDOM.addProjectToDashboard(project)\n    }\n  }\n\n  return {\n    createProjectForm,\n    createTaskForm,\n  }\n})()\n\nAppForms.createProjectForm()\n\nconst Data = () => {\n  let projects = []\n  const storeProject = project => {\n    projects.push(project)\n    console.log('Projects: + ', projects)\n  }\n  const removeProject = project => {\n    projects = projects.filter(item => item.id !== project.id)\n    console.log('Projects: - ', projects)\n  }\n  return {\n    storeProject,\n    removeProject,\n    projects,\n  }\n}\n\nconst AppData = Data()\n\nclass Project {\n  constructor(title) {\n    this.tasks = []\n    this.title = title\n    this.id = uuidv4()\n    this.isDelete = false\n    this.isActive = false\n  }\n  create() {\n    console.log('This:', this)\n    AppData.storeProject(this)\n  }\n  addTask(task) {\n    this.tasks.push(task)\n  }\n  removeTask(task) {\n    this.tasks = this.tasks.filter(item => item.id !== task.id)\n    console.log('Tasks: - ', this.tasks)\n  }\n}\n\nclass Task {\n  constructor(title, description, priority, dueDate) {\n    this.title = title\n    this.description = description\n    this.priority = priority\n    this.id = uuidv4()\n    this.completed = false\n    this.dueDate = dueDate || format(new Date(), 'yyyy-MM-dd')\n  }\n\n  edit(title, description, priority, dueDate) {\n    title && (this.title = title)\n    description && (this.description = description)\n    priority && (this.priority = priority)\n    dueDate && (this.dueDate = dueDate)\n  }\n  toggleComplete() {\n    this.completed = !this.completed\n  }\n}\n\nconst firstList = new Project('First')\nfirstList.create()\nfirstList.addTask(new Task('First 1', 'Description', 'Important'))\nfirstList.addTask(new Task('First 2', 'Write it', 'None'))\n\nconst secondList = new Project('Second')\nsecondList.create()\nsecondList.addTask(new Task('Second 1', 'Description', 'Urgent'))\nsecondList.addTask(new Task('Second 2', 'Description', 'Important'))\n\n// setTimeout(() => {\n//   AppData.removeProject(secondList)\n// }, 2000)\n\n// setTimeout(() => {\n//   firstList.removeTask(AppData.projects[0].tasks[0])\n// }, 3000)\n\nheader.toggler.onclick = () => {\n  AppDOM.toggleHide(sidebar.sidebar, 'closed')\n  AppDOM.toggleHide(dashboard.dashboard, 'closed')\n}\n\nAppDOM.addProjectToSidebar()\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}